; Archivo: main.s
; Dispositivo: PIC16F887
; Autor: Gabriel Fong
; Compilador: pic-as (v2.30), MPLABX V5.40
; 
; Programa: DISPLAY SIMULTANEOS
; Hardware: PUSH EN EL PUERTO B, DISPLAY 7 SEGEMENTOS EN EL PUERTO C & D
;
; Creado: 1 de marzo, 2021
; Última modificación: 1 de marzo, 2021

PROCESSOR 16F887
#include <xc.inc>
 
;---------------------CONFIGURATION WORDS --------------------------------------
   
; CONFIGURATION WORD 1
  CONFIG  FOSC = INTRC_NOCLKOUT ; Oscillator Selection bits (INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/CLKIN)
  CONFIG  WDTE = OFF            ; Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
  CONFIG  PWRTE = OFF            ; Power-up Timer Enable bit (PWRT enabled)
  CONFIG  MCLRE = OFF           ; RE3/MCLR pin function select bit (RE3/MCLR pin function is digital input, MCLR internally tied to VDD)
  CONFIG  CP = OFF              ; Code Protection bit (Program memory code protection is disabled)
  CONFIG  CPD = OFF             ; Data Code Protection bit (Data memory code protection is disabled)
  
  CONFIG  BOREN = OFF           ; Brown Out Reset Selection bits (BOR disabled)
  CONFIG  IESO = OFF            ; Internal External Switchover bit (Internal/External Switchover mode is disabled)
  CONFIG  FCMEN = OFF           ; Fail-Safe Clock Monitor Enabled bit (Fail-Safe Clock Monitor is disable
  CONFIG  LVP = OFF             ; Low Voltage Programming Enable bit (RB3/PGM pin has PGM function, low voltage programming enabled)

; CONFIGURATION WORD 2
  CONFIG  BOR4V = BOR40V        ; Brown-out Reset Selection bit (Brown-out Reset set to 4.0V)
  CONFIG  WRT = OFF             ; Flash Program Memory Self Write Enable bits (Write protection off)
  
  INC	EQU 0			;VALOR DEL PUSH DE INCREMENTO
  DECR  EQU 1			;VALOR DEL PUSH DE DECREMENTO
  
 GLOBAL    W_TEMP, FLAG, STAT_TEMP, CONT, TABLA, DISP1, DISP2, NIBBLE, DECIMAL, CENTENA, DECENA, UNIDADES ;PARA PODER NUESTRA VARIABLES
  
    PSECT udata_bank0		;common memory
    W_TEMP: DS 1		;W_TEMP DE 1 BYTE
    STAT_TEMP: DS 1		;STAT_TEMP 1 BYTE
    CONT: DS 1			;CONTEO DE 1 BYTE
    CENTENA: DS 1
    DECENA: DS 1
    UNIDADES: DS 1
    DECIMAL: DS 1
    TABLA: DS 1
    FLAG:   DS 1
    NIBBLE: DS 2
    DISP2: DS	3		;PARA EL 2 DISPLAY
    DISP1: DS	2		;PARA EL 1 DISPLAY

  PSECT resVect, class=CODE, abs, delta=2

;-------------------------VECTOR RESET ----------------------------------------
  ORG 00h			;posición 0000h para el reset
  resetVec:
    PAGESEL main
    goto main
 PSECT	intVect,    class=CODE,	abs, delta=2
 
 ;-------------------------VECTOR INTERRUPT -------------------------------------  
 ;PSECT interruptVector, delta = 2 ;Posicion 004
 ORG	04h
 PUSH:
    BCF	    INTCON, 7		;DESACTIVAMOS LAS INTERRUPCIONES, PARA QUE NO SE CRUCEN ENTRE ELLAS
    MOVWF   W_TEMP		;GUARDAMOS EL VALOR EN W
    SWAPF   STATUS, W		;GUARDA STATUS EN W, (NO AFECTAMOS LAS BANDERAS)
    MOVWF   STAT_TEMP		;GUARDA W EN LA VARIABLE TEMPORAL
    
 ISR:
    BTFSC   RBIF		;REVISAMOS LA BANDERA DE CHANGE INTERRUPT
    CALL    INC_LED		;LLAMAMOS A LA SUBRUTINA DE INC_LED
    BTFSC   T0IF
    CALL    DISPLAY1
  
 POP:
    SWAPF   STAT_TEMP, W	;REGRESAMOS DE NUEVO EL VALOR COMO SE ENCONTRABA ANTES
    MOVWF   STATUS		;LO COLOCAMOS EN STATUS
    SWAPF   W_TEMP, F		;CAMBIAMOS LOS NIBLES DE W_TEMP
    SWAPF   W_TEMP, W		;REGRESAMOS SU VALOR EL VALOR INICIAL
    RETFIE			;VUELVE ACTIVAR EL GIE
    
ORG 100h
  TABLA_DISPLAY:
 CLRF	    PCLATH
 BSF	    PCLATH, 0		;PCLATH 01
 ADDWF	    PCL			;PROGRAM COUNTER = PCLATH + PC + W
 RETLW	    00111111B		;DIGITO 0
 RETLW	    00000110B		;DIGITO 1
 RETLW	    01011011B		;DIGITO 2
 RETLW	    01001111B		;DIGITO 3
 RETLW	    01100110B		;DIGITO 4
 RETLW	    01101101B		;DIGITO 5
 RETLW	    01111101B		;DIGITO 6
 RETLW	    00000111B		;DIGITO 7
 RETLW	    01111111B		;DIGITO 8
 RETLW	    01100111B		;DIGITO 9
 RETLW	    01110111B		;DIGITO A
 RETLW	    01111100B		;DIGITO B
 RETLW	    00111001B		;DIGITO C
 RETLW	    01011110B		;DIGITO D
 RETLW	    01111001B		;DIGITO E
 RETLW	    01110001B		;DIGITO F 


;-----------------------SUB RUTINAS DE CONFIGURACION --------------------------- 
CONFIG_R:
    BANKSEL OSCCON		;RELOJ INTERNO
    BSF	    SCS
    RETURN  
    
CONFIG_IO:			;CONFIGURACION DE PUERTOS
    BANKSEL ANSEL
    clrf    ANSEL		;PINES DIGITALES EN EL PUERTO A
    clrf    ANSELH		;PINES DIGITALES EN EL PUERTO B
    
    BANKSEL TRISA		;LLAMAMOS AL BANCO EN DONDE SE ENCUENTRA TRIS
    CLRF    TRISA  		;COLOCAMOS EL PUERTO A COMO OUTPUT
    CLRF    TRISD
    BSF	    TRISB,  INC		;PUSH DE INCREMENTO PORTB0
    BSF	    TRISB,  DECR	;PUSH DE INCREMENTO PORTB1
    CLRF    TRISE
    CLRF    TRISC		;COLOCAMOS EL PUERTO C COMO OUTPUT
    CLRF    TRISD		;COLOCAMOS EL PUERTO D COMO OUTPUT
    BSF	    WPUB,   INC		;COLOCAMOS INC & DECR COMO ENTRADAS Y PINES WEAK PULL  UP
    BSF	    WPUB,   DECR
    
    BANKSEL PORTA
    CLRF    PORTA		;COLOCAMOS EN 0 TODOS LOS PINES DEL PUERTO A
    CLRF    PORTB		;COLOCAMOS EN 0 TODOS LOS PINES DEL PUERTO B
    CLRF    PORTD
    MOVLW   00111111B
    MOVWF   PORTC		;COLOCAMOS DIGITO 0 PUERTO C
    CLRF    CONT		;LIMPIAMOS NUESTRAS VARIABLES
    CLRF    DISP1
    CLRF    DISP2
    CLRF    FLAG
    RETURN
    
CONFIG_TMR0:			;CONFIGURACION DE TMR0
    CLRWDT			;LIMPIA EL WDT  Y PRESCALADOR
    BANKSEL OPTION_REG		;NOS DIRIGIMOS A CONFIGURAR OPTION REG DEL TIMER0
    MOVLW   01010000B		;SELECCIONAMOS SÓLO LOS BITS PSA(0),PS2,PS1,PS0, TOSC(0), a RBPU(0) HABILITA PULL UP
    ANDWF   OPTION_REG,	W	;Y LOS DEMAS LOS PONEMOS EN 0
    IORLW   00000100B		; PRESCALADOR EN 1:32 (TMR0 EN 125)
    MOVWF   OPTION_REG  
    CALL    TMR0_RESTART	;LLAMAMOS A LA SUBRUTINA PARA RESTART EL TMR0
    RETURN
 
CONFIG_INT_ENABLE:
    BSF	    GIE			;HABILITAMOS LAS INTERRUPCIONES GLOBALES
    BSF	    RBIE		;HABILITAMOS LAS INTERRUPCIONES INTERRUPT-ON-CHANGE
    BSF	    T0IE		;HABILITAMOS LA INTERRUPCION DE OVERFLOW DE TMR0
    BCF	    T0IF		;LIMPIAMOS LA BANDERA DEL TMR0
    BCF	    RBIF		;LIMPIAMOS LA BANDERA DE INTERRUPT-ON-CHANGE
    RETURN
 
CONFIG_IOCRB:
    BANKSEL TRISA
    BSF	    IOCB,   INC		;HABILITAMOS INTERRRUPT ON CHANGE EN PORTB0 & PORTB1
    BSF	    IOCB,   DECR
    
    BANKSEL PORTA
    MOVF    PORTB,  W		;COMPARAR LOS VALORES ANTES Y DESPUES, PARA VER EL MISSMATCH (NO IGUALES)
    BCF	    RBIF		;LIMPIAMOS LA BANDERA DE INTERRUPT-ON-CHANGE
    RETURN
;-----------------------SUB RUTINAS DE INTERRUPCION ---------------------------   
 INC_LED:
    BTFSS   PORTB,  INC		;MIRAMOS QUE EL BOTON
    INCF    PORTA 		;INCREMENTAMOS EN PORTA
    BTFSS   PORTB,  DECR	;MOVEMOS EL VALOR DE TABLA A W
    DECF    PORTA		;DECREMENTAMOS EN PORTA
    MOVF    PORTA,  0
    MOVWF   TABLA		;CARGAMOS EL VALOR A TABLA
    BCF	    RBIF		;LIMPIAMOS LA BANDERA DE RBIF
    RETURN
    
  TMR0_RESTART:
    BANKSEL TMR0
    MOVLW   6
    MOVWF   TMR0		;LE COLOCAMOS 6, PARA LUEGO OBTENER 8 ms
    BCF	    INTCON, 2		;LIMPIAMOS NUESTRA BANDERA DE T0IF 
    RETURN
    
;-------------------------SUB RUTINAS DE DISPLAY------------------------------- 
 
COUPER_NIBBLES:			;SEPARAR NIBBLES
    MOVF    TABLA,  W		;CARGAMOS EL VALOR A W
    ANDLW   00001111B		;TOMAMOS LOS PRIMEROS 4 BITS (NIBBLE 1)
    MOVWF   NIBBLE		;LO MOVEMOS A NUESTRA VARIABLE 
    SWAPF   TABLA,  W		;TRASLADAMOS DE LUGAR LOS 4 BITS
    ANDLW   00001111B		;TOMAMOS LOS PRIMEROS 4 BITS (NIBBLE 1)
    MOVWF   NIBBLE+1		;LO COLOCAMOS EN EL 2 BYTE DE LA VARIABLE
    RETURN
    
 VALORES_DISP:
    MOVF    NIBBLE, W		;CARGAMOS EL VALOR A W
    CALL    TABLA_DISPLAY	;VAMOS A NUESTRA TABLA
    MOVWF   DISP1		;CARGAMOS EL VALOR AL BYTE 1 DE LA VARIABLE
    MOVF    NIBBLE+1,	W	;CARGAMOS EL VALOR A W
    CALL    TABLA_DISPLAY	;VAMOS A NUESTRA TABLA
    MOVWF   DISP1+1		;CARGAMOS EL VALOR AL BYTE 2 DE LA VARIABLE
    RETURN

DECIMALES_C:
    CLRF    CENTENA
    MOVF    TABLA,  W		;TRASLADAMOS DE LUGAR LOS 4 BITS
    MOVWF   DECIMAL		;TRASLADAMOS W A LA VARIABLE
    MOVLW    0X64		;COLOCAMOS 100
    SUBWF   DECIMAL,F		;RESTAMOS 100 A LA VARIABLE Y LE CARGAMOS EL VALOR
    BTFSC   STATUS, 0		;VERIFIACMOS LA BANDERA DE CARRY
    INCF    CENTENA, F		;INCREMENTAMOS CENTENA
    BTFSC   STATUS, 0		;VERIFICAMOS LA BANDERA CARRY
    GOTO    $-4			;REGRESAMOS 4 LINEAS ANTES
    ADDWF   DECIMAL,F		;SUMAMOS 100 DE NUEVO A LA VARIABLE
    RETURN
DECIMALES_D:
    CLRF    DECENA		;LIMPIAMOS NUESTRA VARIABLE
    MOVLW   0X0A		;COLOCAMOS 10
    SUBWF   DECIMAL,F		;RESTAMOS 10 A LA VARIABLE Y LE CARGAMOS EL VALOR
    BTFSC   STATUS, 0		;VERIFIACMOS LA BANDERA DE CARRY
    INCF    DECENA, 1
    BTFSC   STATUS, 0		;VERIFIACMOS LA BANDERA DE CARRY
    GOTO    $-4
    ADDWF   DECIMAL,F
    RETURN
UNIDADES_D:
    CLRF    UNIDADES
    MOVLW   0X01
    SUBWF   DECIMAL,F
    BTFSC   STATUS, 0		;VERIFIACMOS LA BANDERA DE CARRY
    INCF    UNIDADES, 1
    BTFSC   STATUS, 0		;VERIFIACMOS LA BANDERA DE CARRY
    GOTO    $-4
    RETURN
 VALORES_DISP2:
    MOVF    UNIDADES,	W	;CARGAMOS EL VALOR A W
    CALL    TABLA_DISPLAY	;VAMOS A NUESTRA TABLA
    MOVWF   DISP2		;CARGAMOS EL VALOR UNIDADES
    MOVF    DECENA,	W	;CARGAMOS EL VALOR A W
    CALL    TABLA_DISPLAY	;VAMOS A NUESTRA TABLA
    MOVWF   DISP2+1		;CARGAMOS EL VALOR DECENAS
    MOVF    CENTENA,	W	;CARGAMOS EL VALOR A W
    CALL    TABLA_DISPLAY	;VAMOS A NUESTRA TABLA
    MOVWF   DISP2+2		;CARGAMOS EL VALOR CENTENAS
    RETURN
    
 DISPLAY1:
    CALL    TMR0_RESTART
    CLRF    PORTD		;LIMPIAMOS EL PORTD
    BTFSC   FLAG,   0
    GOTO    DISPLAY_1_1
    BTFSC   FLAG,   1
    GOTO    DISPLAY_1_0
    BTFSC   FLAG,   2
    GOTO    DISPLAY_2_0
    BTFSC   FLAG,   3
    GOTO    DISPLAY_2_1
    BTFSC   FLAG,   4
    GOTO    DISPLAY_2_2
 DISPLAY_1_0:
    MOVF    DISP1,  W		;CARGAMOS EL VALOR A W
    MOVWF   PORTC		;COLOCAMOS EL VALOR EN EL PRIMER DISPLAY
    BSF	    PORTD,  0
    MOVLW   00000001B
    GOTO    CAMBIO_DISP
 DISPLAY_1_1:
    MOVF    DISP1+1, W		;CARGAMOS EL VALOR A W
    MOVWF   PORTC		;COLOCAMOS EL VALOR EN SEGUNDO DISPLAY
    BSF	    PORTD,  1
    MOVLW   00000100B
    GOTO    CAMBIO_DISP
 DISPLAY_2_0:
    MOVF    DISP2,  W		;CARGAMOS EL VALOR A Q
    MOVWF   PORTC		;COLOCAMOS EL VALOR DE UNIDADES AL DISPLAY2
    BSF	    PORTD,  2
    MOVLW   00001000B			;VALOR PARA REVISAR LA BANDERA DECENAS
    GOTO    CAMBIO_DISP
 DISPLAY_2_1:
    MOVF    DISP2+1,  W		;CARGAMOS EL VALOR A Q
    MOVWF   PORTC		;COLOCAMOS EL VALOR DE UNIDADES AL DISPLAY2
    BSF	    PORTD,  3
    MOVLW   00010000B			;VALOR PARA REVISAR LA BANDERA CENTENAS
    GOTO    CAMBIO_DISP
 DISPLAY_2_2:
    MOVF    DISP2+2,  W		;CARGAMOS EL VALOR A Q
    MOVWF   PORTC		;COLOCAMOS EL VALOR DE UNIDADES AL DISPLAY2
    BSF	    PORTD,  4
    MOVLW   00000000B			;VALOR PARA REVISAR LA BANDERA DECENAS
    GOTO    CAMBIO_DISP
 CAMBIO_DISP:
    MOVWF   FLAG,   F
    RETURN
    
 ;-------------------------CONFIGURACIÓN- --------------------------------------
 main:
    CALL    CONFIG_R		;CONFIGURACION DEL RELOJ OSCILADOR 4MHZ
    CALL    CONFIG_IO		;CONFIGURACION DE PUERTOS
    CALL    CONFIG_TMR0		;CONFIGURACION DE TMR0
    CALL    CONFIG_IOCRB	;CONFIGURACION DE IOCRB
    CALL    CONFIG_INT_ENABLE	;CONFIGURACION DE INTERRUPCIONES
    
 LOOP:
    CALL    COUPER_NIBBLES
    CALL    VALORES_DISP
    CALL    DECIMALES_C
    CALL    DECIMALES_D
    CALL    UNIDADES_D
    CALL    VALORES_DISP2
    GOTO    LOOP