; Archivo: main.s
; Dispositivo: PIC16F887
; Autor: Gabriel Fong
; Compilador: pic-as (v2.30), MPLABX V5.40
; 
; Programa: LABORATORIO 06
; Hardware: DISPLAY 7 SEGEMENTOS EN EL PUERTO C, LED EN EL PUERTO A  CONTROL DE TRANSISTORES PUERTO D
;
; Creado: 23 de marzo, 2021
; Última modificación: 30 de marzo, 2021

PROCESSOR 16F887
#include <xc.inc>
    
;---------------------CONFIGURATION WORDS --------------------------------------
   
; CONFIGURATION WORD 1
  CONFIG  FOSC = INTRC_NOCLKOUT ; Oscillator Selection bits (INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/CLKIN)
  CONFIG  WDTE = OFF            ; Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
  CONFIG  PWRTE = OFF            ; Power-up Timer Enable bit (PWRT enabled)
  CONFIG  MCLRE = OFF           ; RE3/MCLR pin function select bit (RE3/MCLR pin function is digital input, MCLR internally tied to VDD)
  CONFIG  CP = OFF              ; Code Protection bit (Program memory code protection is disabled)
  CONFIG  CPD = OFF             ; Data Code Protection bit (Data memory code protection is disabled)
  
  CONFIG  BOREN = OFF           ; Brown Out Reset Selection bits (BOR disabled)
  CONFIG  IESO = OFF            ; Internal External Switchover bit (Internal/External Switchover mode is disabled)
  CONFIG  FCMEN = OFF           ; Fail-Safe Clock Monitor Enabled bit (Fail-Safe Clock Monitor is disable
  CONFIG  LVP = OFF             ; Low Voltage Programming Enable bit (RB3/PGM pin has PGM function, low voltage programming enabled)

; CONFIGURATION WORD 2
  CONFIG  BOR4V = BOR40V        ; Brown-out Reset Selection bit (Brown-out Reset set to 4.0V)
  CONFIG  WRT = OFF             ; Flash Program Memory Self Write Enable bits (Write protection off)

GLOBAL	LED
PSECT udata_bank0		;VARIABLES EN BANCO 0
  W_TEMP: DS 1			;W_TEMP DE 1 BYTE
  STAT_TEMP: DS 1		;STAT_TEMP 1 BYTE
  CONT_TMR0: DS	1		;VARIABLE DEL TIMER 0
  CONT_TMR1: DS	1		;VARIABLE DEL TIMER 1
  CONT_TMR2: DS	1		;VARIABLE DEL TIMER 2
  NUMERO:    DS 1		;VARIABLE DE NUMERO
  NUMERO_D:  DS 1
  DECENAS:   DS	1
  UNIDADES:  DS 1
  DISP:	     DS 2
  SELECT:    DS	1
  LED:	     DS 1
    
PSECT resVect, class=CODE, abs, delta=2
;-------------------------VECTOR RESET ----------------------------------------
  ORG 00h			;posición 0000h para el reset
  resetVec:
    PAGESEL main
    goto main
    
 PSECT	intVect,    class=CODE,	abs, delta=2
 
 ORG	04h
 PUSH:
    BCF	    INTCON, 7		;DESACTIVAMOS LAS INTERRUPCIONES, PARA QUE NO SE CRUCEN ENTRE ELLAS
    MOVWF   W_TEMP		;GUARDAMOS EL VALOR EN W
    SWAPF   STATUS, W		;GUARDA STATUS EN W, (NO AFECTAMOS LAS BANDERAS)
    MOVWF   STAT_TEMP		;GUARDA W EN LA VARIABLE TEMPORAL
    
 ISR:
    BTFSC   T0IF		;REVISAMOS LA BANDERA DE TOIF
    CALL    DISPLAY		;LLAMAMOS A LA SUBRUTINA DEL DISPLAY
    BTFSC   TMR1IF		;REVISAMOS LA BANDERA TMR1IF
    CALL    INC_VARIABLE	;LLAMAMOS A INC VARIABLE
    BTFSC   TMR2IF		;REVISAMOS LA BANDERA TMR2IF
    CALL    LED_BLINK		;LLAMAMOS A LED BLINK
  
 POP:
    SWAPF   STAT_TEMP, W	;REGRESAMOS DE NUEVO EL VALOR COMO SE ENCONTRABA ANTES
    MOVWF   STATUS		;LO COLOCAMOS EN STATUS
    SWAPF   W_TEMP, F		;CAMBIAMOS LOS NIBLES DE W_TEMP
    SWAPF   W_TEMP, W		;REGRESAMOS SU VALOR EL VALOR INICIAL
    RETFIE			;VUELVE ACTIVAR EL GIE
    
ORG 100h
  TABLA_DISPLAY:
 CLRF	    PCLATH
 BSF	    PCLATH, 0		;PCLATH 01
 ADDWF	    PCL			;PROGRAM COUNTER = PCLATH + PC + W
 RETLW	    00111111B		;DIGITO 0
 RETLW	    00000110B		;DIGITO 1
 RETLW	    01011011B		;DIGITO 2
 RETLW	    01001111B		;DIGITO 3
 RETLW	    01100110B		;DIGITO 4
 RETLW	    01101101B		;DIGITO 5
 RETLW	    01111101B		;DIGITO 6
 RETLW	    00000111B		;DIGITO 7
 RETLW	    01111111B		;DIGITO 8
 RETLW	    01100111B		;DIGITO 9
 
;-----------------------SUB RUTINAS DE CONFIGURACION ---------------------------
 CONFIG_R:
    BANKSEL OSCCON		;RELOJ INTERNO
    BSF	    SCS
    RETURN  
    
 CONFIG_IO:			;CONFIGURACION DE PUERTOS
    BANKSEL ANSEL
    clrf    ANSEL		;PINES DIGITALES EN EL PUERTO A
    clrf    ANSELH		;PINES DIGITALES EN EL PUERTO B
    
    BANKSEL TRISA		;LLAMAMOS AL BANCO EN DONDE SE ENCUENTRA TRIS
    CLRF    TRISA  		;COLOCAMOS EL PUERTO A D E COMO OUTPUT
    CLRF    TRISD
    CLRF    TRISC		;COLOCAMOS EL PUERTO C COMO OUTPUT
    
    BANKSEL PORTA
    CLRF    PORTA		;COLOCAMOS EN 0 TODOS LOS PINES DEL PUERTO A
    CLRF    PORTB		;COLOCAMOS EN 0 TODOS LOS PINES DEL PUERTO B
    CLRF    PORTD
    MOVLW   00111111B
    MOVWF   PORTC		;COLOCAMOS DIGITO 0 PUERTO C
    RETURN
    
 CONFIG_TMR0:			;CONFIGURACION DE TMR0
    CLRWDT			;LIMPIA EL WDT  Y PRESCALADOR
    BANKSEL OPTION_REG		;NOS DIRIGIMOS A CONFIGURAR OPTION REG DEL TIMER0
    MOVLW   11010000B		;SELECCIONAMOS SÓLO LOS BITS PSA(0),PS2,PS1,PS0, TOSC(0), a RBPU(0) HABILITA PULL UP
    ANDWF   OPTION_REG,	W	;Y LOS DEMAS LOS PONEMOS EN 0
    IORLW   00000001B		; PRESCALADOR EN 1:4 (TMR0 EN 6)
    MOVWF   OPTION_REG  
    CALL    TMR0_RESTART	;LLAMAMOS A LA SUBRUTINA PARA RESTART EL TMR0
    RETURN 
    
 CONFIG_TMR1:
    BANKSEL  T1CON		;CONFIGURACION	DEL TMR1
    MOVLW   11110101B		;PRESCALES 1:8 (TMR1 3036) PARA 500 MS
    MOVWF   T1CON
    CALL    TMR1_RESTART	;LLAMAMOS A LA SUBRUTINA PARA RESTART EL TMR0
    RETURN
    
 CONFIG_TMR2:
    BANKSEL T2CON
    MOVLW   01100110B		;POSTCALER 1:13	    PRESCALER 1:16
    MOVWF   T2CON
    BANKSEL OPTION_REG
    MOVLW   240
    MOVWF   PR2
    BANKSEL TMR0
    BCF	    PIR1,    1
    RETURN
 CONFIG_INT_ENABLE:
    BSF	    GIE			;HABILITAMOS LAS INTERRUPCIONES GLOBALES
    BSF	    PEIE		;HABILITAMOS LAS INTERRUPCIONES PERIFERICAS
    BSF	    T0IE		;HABILITAMOS LA INTERRUPCION DE OVERFLOW DE TMR0
    BANKSEL OPTION_REG
    BSF	    PIE1,    0		;HABILITAMOS LA INTERRUPCION DE OVERFLOW DE TMR1
    BSF	    PIE1,    1		;HABILITAMOS LA INTERRUPCION DE OVERFLOW DE TMR2
    BCF	    T0IF		;LIMPIAMOS LA BANDERA DEL TMR0
    BANKSEL TMR0
    BCF	    TMR1IF		;LIMPIAMOS LA BANDERA DEL TMR1
    BCF	    TMR2IF		;LIMPIAMOS LA BANDERA DEL TMR2
    RETURN
    
 TMR0_RESTART:
    BANKSEL TMR0
    MOVLW   6
    MOVWF   TMR0		;LE COLOCAMOS 6, PARA LUEGO OBTENER 1 ms
    BCF	    INTCON, 2		;LIMPIAMOS NUESTRA BANDERA DE T0IF 
    RETURN
 TMR1_RESTART:
    BANKSEL TMR0
    MOVLW   0X0B
    MOVWF   TMR1H		;CARGAMOS EL VALOR AL BYTE MAS SIGNIFICATIVO
    MOVLW   0XDC		;CARGAMOS EL VALOR AL BYTE MENOS SIGNIFICATIVO
    MOVWF   TMR1L
    BCF	    PIR1,   0		;LIMPIAMOS BANDERA TMR1IF
    RETURN
    
 
 INC_VARIABLE:
    CALL    TMR1_RESTART	;LLAMAMOS A LA SUBRUTINA DE RESTART TMR1
    INCF    CONT_TMR1
    MOVF    CONT_TMR1,   W	;MOVEMOS EL VAROR A W
    SUBLW   2			;RESTA CON 2, QUEREMOS QUE SE REPITA 2 VECES
    BTFSS   ZERO		;REVISAMOS BANDERA DE ZERO
    RETURN			;REGRESAMOS
    CLRF    CONT_TMR1		;LIMPIAMOS LA VARIABLE DE CONTEO
    INCF    NUMERO
    MOVLW   0X64
    XORWF   NUMERO,	W	;CUANDO LLEGUE A 100 SE RESETEA
    BTFSC   ZERO
    CLRF    NUMERO
    RETURN
    
  LED_BLINK:
    BCF	    TMR2IF		;LIMPIAMOS LA INTERRUPCION
    INCF    CONT_TMR2		;INCREMENTAMOS LA VARIABLE
    MOVF    CONT_TMR2,   W	;MOVEMOS EL VAROR A W
    SUBLW   5			;RESTA CON 5, QUEREMOS QUE SE REPITA 5 VECES
    BTFSS   ZERO		;REVISAMOS BANDERA DE ZERO
    RETURN
    CLRF    CONT_TMR2		;LIMPIAMOS LA VARIABLE DE CONTEO DEL TMR2
    MOVLW   0X01
    XORWF   LED,  F		;REALIZAMOS XOR, ENTONCES EN EL BIT 0 ESTARÁ CAMBIANDO ENTRE 0 Y 1 CADA 250 MS
    BTFSC   LED,    0
    BSF	    PORTA,  0		;ENCENDENMOS LA LED
    BTFSS   LED,    0
    BCF	    PORTA,  0		;APAGAMOS LA LED
    RETURN
 main:
    CALL    CONFIG_R		;CONFIGURACION DEL RELOJ OSCILADOR 4MHZ
    CALL    CONFIG_IO		;CONFIGURACION DE PUERTOS
    CALL    CONFIG_INT_ENABLE	;CONFIGURACION DE INTERRUPCIONES
    CALL    CONFIG_TMR0		;CONFIGURACION DE TMR0
    CALL    CONFIG_TMR1		;CONFIGURACION DE TMR1
    CALL    CONFIG_TMR2
    
    
 LOOP:
    CALL    DECENA
    CALL    UNIDADE
    CALL    VALORES_D
    GOTO    LOOP
    
 DECENA:
    MOVF    NUMERO,  W
    MOVWF   NUMERO_D
    CLRF    DECENAS		;LIMPIAMOS NUESTRA VARIABLE
    MOVLW   0X0A		;COLOCAMOS 10
    SUBWF   NUMERO_D,  F	;RESTAMOS 10 A LA VARIABLE Y LE CARGAMOS EL VALOR
    BTFSC   STATUS, 0		;VERIFIACMOS LA BANDERA DE CARRY
    INCF    DECENAS, 1		;INCREMENTAMOS A DECENA1
    BTFSC   STATUS, 0		;VERIFIACMOS LA BANDERA DE CARRY
    GOTO    $-4
    ADDWF   NUMERO_D,  F
    RETURN
    
 UNIDADE:
    CLRF    UNIDADES		;LIMPIAMOS LA VARIABLE
    MOVLW   0X01		;COLOCAMOS 1
    SUBWF   NUMERO_D,  F	;RESTAMOS 1 A LA VARIABLE
    BTFSC   STATUS, 0		;VERIFIACMOS LA BANDERA DE CARRY
    INCF    UNIDADES, 1		;INCREMENTAMOS UNIDADES
    BTFSC   STATUS, 0		;VERIFIACMOS LA BANDERA DE CARRY
    GOTO    $-4
    ADDWF   NUMERO_D,  F	;LA VARIABLE SE QUEDA EN VALOR DE 0
    RETURN
    
 VALORES_D:
    MOVF    UNIDADES,	W	;CARGAMOS EL VALOR A W
    CALL    TABLA_DISPLAY	;VAMOS A NUESTRA TABLA
    MOVWF   DISP		;CARGAMOS EL VALOR UNIDADES
    MOVF    DECENAS,	W	;CARGAMOS EL VALOR A W
    CALL    TABLA_DISPLAY	;VAMOS A NUESTRA TABLA
    MOVWF   DISP+1		;CARGAMOS EL VALOR DECENAS
    RETURN

  DISPLAY:
    CALL    TMR0_RESTART	 ;LIMPIAMOS EL TMR0
    BTFSS   LED,    0		 ;VERIFICAMOS SI LA BANDERA ESTA ENCENDIDA
    CALL    DISPLAY_OFF		 ;APAGAMOS EL DISPLAY
    BTFSS   LED,    0
    RETURN
    CLRF    PORTD		;LIMPIAMOS EL PORTD
    BTFSC   SELECT, 0		;VERIFICAMOS A QUE DISPLAY CARGAMOS EL VALOR
    GOTO    DISPLAY_V1_1
    BTFSC   SELECT, 1
    GOTO    DISPLAY_V1_0
  
  DISPLAY_V1_0:
    MOVF    DISP,  W		;CARGAMOS EL VALOR A W
    MOVWF   PORTC		;COLOCAMOS EL VALOR EN EL PRIMER DISPLAY
    BSF	    PORTD,  0
    MOVLW   00000001B
    GOTO    CAMBIO_DISP
 DISPLAY_V1_1:
    MOVF    DISP+1, W		;CARGAMOS EL VALOR A W
    MOVWF   PORTC		;COLOCAMOS EL VALOR EN SEGUNDO DISPLAY
    BSF	    PORTD,  1
    MOVLW   00000000B
    GOTO    CAMBIO_DISP
    
 CAMBIO_DISP:
    MOVWF   SELECT, F		;CAMBIAMOS LA BANDERA 
    RETURN
 DISPLAY_OFF:
    BSF	    PORTD,  1		;SELECCIONO EL DISPLAY DE DECENAS
    BSF	    PORTD,  0		;SELECCIONO EL DISPLAY DE UNIDADES
    CLRF    PORTC		;LIMPIO EL PORTC
    RETURN