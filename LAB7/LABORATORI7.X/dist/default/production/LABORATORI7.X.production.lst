

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 13 01:30:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0009                     _PORTE	set	9
   205  0007                     _PORTC	set	7
   206  0008                     _PORTD	set	8
   207  0005                     _PORTA	set	5
   208  0001                     _TMR0	set	1
   209  000B                     _INTCONbits	set	11
   210  0031                     _RB1	set	49
   211  0030                     _RB0	set	48
   212  0058                     _RBIF	set	88
   213  005A                     _T0IF	set	90
   214  0081                     _OPTION_REG	set	129
   215  008F                     _OSCCONbits	set	143
   216  0086                     _TRISB	set	134
   217  0089                     _TRISE	set	137
   218  0088                     _TRISD	set	136
   219  0087                     _TRISC	set	135
   220  0085                     _TRISA	set	133
   221  04B1                     _IOCB1	set	1201
   222  04B0                     _IOCB0	set	1200
   223  04A9                     _WPUB1	set	1193
   224  04A8                     _WPUB0	set	1192
   225  0189                     _ANSELH	set	393
   226  0188                     _ANSEL	set	392
   227                           
   228                           	psect	cinit
   229  000F                     start_initialization:	
   230                           ; #config settings
   231                           
   232  000F                     __initialization:
   233                           
   234                           ; Clear objects allocated to COMMON
   235  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   236  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   237  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   238  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   239  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   240  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   241  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   242  0016  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   243  0017                     end_of_initialization:	
   244                           ;End of C runtime variable initialization code
   245                           
   246  0017                     __end_of__initialization:
   247  0017  0183               	clrf	3
   248  0018  120A  118A  2892   	ljmp	_main	;jump to C main() function
   249                           
   250                           	psect	bssCOMMON
   251  0070                     __pbssCOMMON:
   252  0070                     _flag2:
   253  0070                     	ds	2
   254  0072                     _flag1:
   255  0072                     	ds	2
   256  0074                     _contador2:
   257  0074                     	ds	2
   258  0076                     _contador1:
   259  0076                     	ds	2
   260                           
   261                           	psect	cstackCOMMON
   262  0078                     __pcstackCOMMON:
   263  0078                     ?_setup:
   264  0078                     ?_isr:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0078                     ??_isr:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0078                     ?_main:	
   271                           ; 1 bytes @ 0x0
   272                           
   273                           
   274                           ; 1 bytes @ 0x0
   275  0078                     	ds	2
   276  007A                     ??_setup:
   277  007A                     ??_main:	
   278                           ; 1 bytes @ 0x2
   279                           
   280                           
   281                           	psect	maintext
   282  0092                     __pmaintext:	
   283                           ; 1 bytes @ 0x2
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 78 in file "main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, status,2, status,0, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : B00/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels required when called:    2
   309 ;; This function calls:
   310 ;;		_setup
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           
   317                           ;psect for function _main
   318  0092                     _main:
   319  0092                     l746:	
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   322                           
   323                           
   324                           ;main.c: 79: 
   325  0092  120A  118A  2068  120A  118A  	fcall	_setup
   326  0097                     l748:
   327                           
   328                           ;main.c: 82: 
   329  0097  0876               	movf	_contador1,w
   330  0098  1283               	bcf	3,5	;RP0=0, select bank0
   331  0099  1303               	bcf	3,6	;RP1=0, select bank0
   332  009A  0085               	movwf	5	;volatile
   333  009B                     l750:
   334                           
   335                           ;main.c: 83: 
   336  009B  0874               	movf	_contador2,w
   337  009C  0088               	movwf	8	;volatile
   338  009D  2897               	goto	l748
   339  009E  120A  118A  280C   	ljmp	start
   340  00A1                     __end_of_main:
   341                           
   342                           	psect	text1
   343  0068                     __ptext1:	
   344 ;; *************** function _setup *****************
   345 ;; Defined at:
   346 ;;		line 87 in file "main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; Hardware stack levels required when called:    1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function _setup
   376  0068                     _setup:
   377  0068                     l672:	
   378                           ;incstack = 0
   379                           ; Regs used in _setup: [wreg+status,2]
   380                           
   381                           
   382                           ;main.c: 89: 
   383  0068  1683               	bsf	3,5	;RP0=1, select bank3
   384  0069  1703               	bsf	3,6	;RP1=1, select bank3
   385  006A  0188               	clrf	8	;volatile
   386                           
   387                           ;main.c: 90:     INTCONbits.GIE = 1;
   388  006B  0189               	clrf	9	;volatile
   389                           
   390                           ;main.c: 92:     INTCONbits.T0IF = 0;
   391  006C  1683               	bsf	3,5	;RP0=1, select bank1
   392  006D  1303               	bcf	3,6	;RP1=0, select bank1
   393  006E  0185               	clrf	5	;volatile
   394                           
   395                           ;main.c: 93:     INTCONbits.RBIE = 1;
   396  006F  0187               	clrf	7	;volatile
   397                           
   398                           ;main.c: 94:     INTCONbits.RBIF = 0;
   399  0070  0188               	clrf	8	;volatile
   400                           
   401                           ;main.c: 95: }
   402  0071  0189               	clrf	9	;volatile
   403  0072                     l674:
   404  0072  3003               	movlw	3
   405  0073  0086               	movwf	6	;volatile
   406  0074                     l676:
   407  0074  1283               	bcf	3,5	;RP0=0, select bank0
   408  0075  1303               	bcf	3,6	;RP1=0, select bank0
   409  0076  0185               	clrf	5	;volatile
   410  0077                     l678:
   411  0077  0187               	clrf	7	;volatile
   412  0078                     l680:
   413  0078  0188               	clrf	8	;volatile
   414  0079                     l682:
   415  0079  0189               	clrf	9	;volatile
   416  007A                     l684:
   417  007A  1683               	bsf	3,5	;RP0=1, select bank1
   418  007B  1303               	bcf	3,6	;RP1=0, select bank1
   419  007C  170F               	bsf	15,6	;volatile
   420  007D                     l686:
   421  007D  168F               	bsf	15,5	;volatile
   422  007E                     l688:
   423  007E  120F               	bcf	15,4	;volatile
   424  007F                     l690:
   425  007F  140F               	bsf	15,0	;volatile
   426  0080                     l692:
   427  0080  3054               	movlw	84
   428  0081  0081               	movwf	1	;volatile
   429  0082                     l694:
   430  0082  3064               	movlw	100
   431  0083  1283               	bcf	3,5	;RP0=0, select bank0
   432  0084  1303               	bcf	3,6	;RP1=0, select bank0
   433  0085  0081               	movwf	1	;volatile
   434  0086                     l696:
   435  0086  1683               	bsf	3,5	;RP0=1, select bank1
   436  0087  1303               	bcf	3,6	;RP1=0, select bank1
   437  0088  1415               	bsf	21,0	;volatile
   438  0089                     l698:
   439  0089  1495               	bsf	21,1	;volatile
   440  008A                     l700:
   441  008A  1416               	bsf	22,0	;volatile
   442  008B                     l702:
   443  008B  1496               	bsf	22,1	;volatile
   444  008C                     l704:
   445  008C  178B               	bsf	11,7	;volatile
   446  008D                     l706:
   447  008D  168B               	bsf	11,5	;volatile
   448  008E                     l708:
   449  008E  110B               	bcf	11,2	;volatile
   450  008F                     l710:
   451  008F  158B               	bsf	11,3	;volatile
   452  0090                     l712:
   453  0090  100B               	bcf	11,0	;volatile
   454  0091                     l80:
   455  0091  0008               	return
   456  0092                     __end_of_setup:
   457                           
   458                           	psect	text2
   459  001B                     __ptext2:	
   460 ;; *************** function _isr *****************
   461 ;; Defined at:
   462 ;;		line 42 in file "main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          2       0       0       0       0
   479 ;;      Totals:         2       0       0       0       0
   480 ;;Total ram usage:        2 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		Interrupt level 1
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           
   490                           ;psect for function _isr
   491  001B                     _isr:
   492  001B                     i1l714:
   493                           
   494                           ;main.c: 43:      INTCONbits.RBIF = 0;
   495  001B  138B               	bcf	11,7	;volatile
   496                           
   497                           ;main.c: 44:     }
   498  001C  1D0B               	btfss	11,2	;volatile
   499  001D  281F               	goto	u1_21
   500  001E  2820               	goto	u1_20
   501  001F                     u1_21:
   502  001F  282B               	goto	i1l720
   503  0020                     u1_20:
   504  0020                     i1l716:
   505                           
   506                           ;main.c: 45:     (INTCONbits.GIE = 1);
   507  0020  3001               	movlw	1
   508  0021  07F6               	addwf	_contador1,f
   509  0022  1803               	skipnc
   510  0023  0AF7               	incf	_contador1+1,f
   511  0024  3000               	movlw	0
   512  0025  07F7               	addwf	_contador1+1,f
   513                           
   514                           ;main.c: 46: }
   515  0026  3064               	movlw	100
   516  0027  1283               	bcf	3,5	;RP0=0, select bank0
   517  0028  1303               	bcf	3,6	;RP1=0, select bank0
   518  0029  0081               	movwf	1	;volatile
   519  002A                     i1l718:
   520                           
   521                           ;main.c: 47: 
   522  002A  110B               	bcf	11,2	;volatile
   523  002B                     i1l720:
   524                           
   525                           ;main.c: 49:     setup();
   526  002B  1C0B               	btfss	11,0	;volatile
   527  002C  282E               	goto	u2_21
   528  002D  282F               	goto	u2_20
   529  002E                     u2_21:
   530  002E  2860               	goto	i1l744
   531  002F                     u2_20:
   532  002F                     i1l722:
   533                           
   534                           ;main.c: 51:     while(1){
   535  002F  1283               	bcf	3,5	;RP0=0, select bank0
   536  0030  1303               	bcf	3,6	;RP1=0, select bank0
   537  0031  1806               	btfsc	6,0	;volatile
   538  0032  2834               	goto	u3_21
   539  0033  2835               	goto	u3_20
   540  0034                     u3_21:
   541  0034  283A               	goto	i1l726
   542  0035                     u3_20:
   543  0035                     i1l724:
   544                           
   545                           ;main.c: 52:         PORTA = contador1;
   546  0035  3001               	movlw	1
   547  0036  00F2               	movwf	_flag1
   548  0037  3000               	movlw	0
   549  0038  00F3               	movwf	_flag1+1
   550                           
   551                           ;main.c: 53:         PORTD = contador2;
   552  0039  2848               	goto	i1l732
   553  003A                     i1l726:
   554                           
   555                           ;main.c: 55: }
   556  003A  0372               	decf	_flag1,w
   557  003B  0473               	iorwf	_flag1+1,w
   558  003C  1D03               	btfss	3,2
   559  003D  283F               	goto	u4_21
   560  003E  2840               	goto	u4_20
   561  003F                     u4_21:
   562  003F  2848               	goto	i1l732
   563  0040                     u4_20:
   564  0040                     i1l728:
   565                           
   566                           ;main.c: 56: 
   567  0040  3001               	movlw	1
   568  0041  07F4               	addwf	_contador2,f
   569  0042  1803               	skipnc
   570  0043  0AF5               	incf	_contador2+1,f
   571  0044  3000               	movlw	0
   572  0045  07F5               	addwf	_contador2+1,f
   573  0046                     i1l730:
   574                           
   575                           ;main.c: 57: void setup(void){
   576  0046  01F2               	clrf	_flag1
   577  0047  01F3               	clrf	_flag1+1
   578  0048                     i1l732:
   579                           
   580                           ;main.c: 63:     TRISC = 0X00;
   581  0048  1886               	btfsc	6,1	;volatile
   582  0049  284B               	goto	u5_21
   583  004A  284C               	goto	u5_20
   584  004B                     u5_21:
   585  004B  2851               	goto	i1l736
   586  004C                     u5_20:
   587  004C                     i1l734:
   588                           
   589                           ;main.c: 64:     TRISD = 0X00;
   590  004C  3001               	movlw	1
   591  004D  00F0               	movwf	_flag2
   592  004E  3000               	movlw	0
   593  004F  00F1               	movwf	_flag2+1
   594                           
   595                           ;main.c: 65:     TRISE = 0X00;
   596  0050  285F               	goto	i1l742
   597  0051                     i1l736:
   598                           
   599                           ;main.c: 67: 
   600  0051  0370               	decf	_flag2,w
   601  0052  0471               	iorwf	_flag2+1,w
   602  0053  1D03               	btfss	3,2
   603  0054  2856               	goto	u6_21
   604  0055  2857               	goto	u6_20
   605  0056                     u6_21:
   606  0056  285F               	goto	i1l742
   607  0057                     u6_20:
   608  0057                     i1l738:
   609                           
   610                           ;main.c: 68:     PORTA = 0X00;
   611  0057  30FF               	movlw	255
   612  0058  07F4               	addwf	_contador2,f
   613  0059  1803               	skipnc
   614  005A  0AF5               	incf	_contador2+1,f
   615  005B  30FF               	movlw	255
   616  005C  07F5               	addwf	_contador2+1,f
   617  005D                     i1l740:
   618                           
   619                           ;main.c: 69:     PORTC = 0X00;
   620  005D  01F0               	clrf	_flag2
   621  005E  01F1               	clrf	_flag2+1
   622  005F                     i1l742:
   623                           
   624                           ;main.c: 73: 
   625  005F  100B               	bcf	11,0	;volatile
   626  0060                     i1l744:
   627                           
   628                           ;main.c: 75:     OSCCONbits.IRCF1 = 1;
   629  0060  178B               	bsf	11,7	;volatile
   630  0061                     i1l69:
   631  0061  0879               	movf	??_isr+1,w
   632  0062  008A               	movwf	10
   633  0063  0E78               	swapf	??_isr,w
   634  0064  0083               	movwf	3
   635  0065  0EFE               	swapf	btemp,f
   636  0066  0E7E               	swapf	btemp,w
   637  0067  0009               	retfie
   638  0068                     __end_of_isr:
   639  007E                     btemp	set	126	;btemp
   640  007E                     wtemp0	set	126
   641                           
   642                           	psect	intentry
   643  0004                     __pintentry:	
   644                           ;incstack = 0
   645                           ; Regs used in _isr: [wreg+status,2+status,0]
   646                           
   647  0004                     interrupt_function:
   648  007E                     saved_w	set	btemp
   649  0004  00FE               	movwf	btemp
   650  0005  0E03               	swapf	3,w
   651  0006  00F8               	movwf	??_isr
   652  0007  080A               	movf	10,w
   653  0008  00F9               	movwf	??_isr+1
   654  0009  120A  118A  281B   	ljmp	_isr
   655                           
   656                           	psect	config
   657                           
   658                           ;Config register CONFIG1 @ 0x2007
   659                           ;	Oscillator Selection bits
   660                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
   661                           ;	Watchdog Timer Enable bit
   662                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   663                           ;	Power-up Timer Enable bit
   664                           ;	PWRTE = OFF, PWRT disabled
   665                           ;	RE3/MCLR pin function select bit
   666                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   667                           ;	Code Protection bit
   668                           ;	CP = OFF, Program memory code protection is disabled
   669                           ;	Data Code Protection bit
   670                           ;	CPD = OFF, Data memory code protection is disabled
   671                           ;	Brown Out Reset Selection bits
   672                           ;	BOREN = OFF, BOR disabled
   673                           ;	Internal External Switchover bit
   674                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   675                           ;	Fail-Safe Clock Monitor Enabled bit
   676                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   677                           ;	Low Voltage Programming Enable bit
   678                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   679                           ;	In-Circuit Debugger Mode bit
   680                           ;	DEBUG = 0x1, unprogrammed default
   681  2007                     	org	8199
   682  2007  20D5               	dw	8405
   683                           
   684                           ;Config register CONFIG2 @ 0x2008
   685                           ;	Brown-out Reset Selection bit
   686                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   687                           ;	Flash Program Memory Self Write Enable bits
   688                           ;	WRT = OFF, Write protection off
   689  2008                     	org	8200
   690  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 13 01:30:36 2021

                     l80 0091                      l700 008A                      l710 008F  
                    l702 008B                      l712 0090                      l704 008C  
                    l706 008D                      l708 008E                      l750 009B  
                    l680 0078                      l672 0068                      l690 007F  
                    l682 0079                      l674 0072                      l746 0092  
                    l692 0080                      l684 007A                      l676 0074  
                    l748 0097                      l694 0082                      l686 007D  
                    l678 0077                      l696 0086                      l688 007E  
                    l698 0089                      _RB0 0030                      _RB1 0031  
                    _isr 001B                     ?_isr 0078                     _T0IF 005A  
                   _RBIF 0058                     i1l69 0061                     _TMR0 0001  
                   u1_20 0020                     u1_21 001F                     u2_20 002F  
                   u2_21 002E                     u3_20 0035                     u3_21 0034  
                   u4_20 0040                     u4_21 003F                     u5_20 004C  
                   u5_21 004B                     u6_20 0057                     u6_21 0056  
                   _main 0092                     btemp 007E                     start 000C  
                  ??_isr 0078                    ?_main 0078                    _ANSEL 0188  
                  _IOCB0 04B0                    _IOCB1 04B1                    i1l720 002B  
                  i1l730 0046                    i1l722 002F                    i1l714 001B  
                  i1l740 005D                    i1l732 0048                    i1l724 0035  
                  i1l716 0020                    i1l742 005F                    i1l734 004C  
                  i1l726 003A                    i1l718 002A                    i1l736 0051  
                  i1l728 0040                    i1l744 0060                    i1l738 0057  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _WPUB0 04A8                    _WPUB1 04A9                    _flag1 0072  
                  _flag2 0070                    _setup 0068                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00A1                   ??_main 007A                   ?_setup 0078  
                 _ANSELH 0189                   saved_w 007E  __end_of__initialization 0017  
         __pcstackCOMMON 0078            __end_of_setup 0092                  ??_setup 007A  
             __pmaintext 0092               __pintentry 0004                  __ptext1 0068  
                __ptext2 001B             __size_of_isr 004D     end_of_initialization 0017  
    start_initialization 000F              __end_of_isr 0068              __pbssCOMMON 0070  
              ___latbits 0002                _contador1 0076                _contador2 0074  
         __size_of_setup 002A        interrupt_function 0004            __size_of_main 000F  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
             _OPTION_REG 0081  
