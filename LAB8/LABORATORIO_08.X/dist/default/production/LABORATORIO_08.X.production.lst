

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Apr 21 23:12:41 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	idataBANK0
   216  02B3                     __pidataBANK0:
   217                           
   218                           ;initializer for _digitos
   219  02B3  343F               	retlw	63
   220  02B4  3400               	retlw	0
   221  02B5  3406               	retlw	6
   222  02B6  3400               	retlw	0
   223  02B7  345B               	retlw	91
   224  02B8  3400               	retlw	0
   225  02B9  344F               	retlw	79
   226  02BA  3400               	retlw	0
   227  02BB  3466               	retlw	102
   228  02BC  3400               	retlw	0
   229  02BD  346D               	retlw	109
   230  02BE  3400               	retlw	0
   231  02BF  347D               	retlw	125
   232  02C0  3400               	retlw	0
   233  02C1  3407               	retlw	7
   234  02C2  3400               	retlw	0
   235  02C3  347F               	retlw	127
   236  02C4  3400               	retlw	0
   237  02C5  3467               	retlw	103
   238  02C6  3400               	retlw	0
   239                           
   240                           ;initializer for _select
   241  02C7  3401               	retlw	1
   242  02C8  3400               	retlw	0
   243  0009                     _PORTE	set	9
   244  0008                     _PORTD	set	8
   245  0006                     _PORTB	set	6
   246  0005                     _PORTA	set	5
   247  000C                     _PIR1bits	set	12
   248  001E                     _ADRESH	set	30
   249  0007                     _PORTC	set	7
   250  001F                     _ADCON0bits	set	31
   251  0001                     _TMR0	set	1
   252  000B                     _INTCONbits	set	11
   253  0066                     _ADIF	set	102
   254  005A                     _T0IF	set	90
   255  008C                     _PIE1bits	set	140
   256  009F                     _ADCON1bits	set	159
   257  0081                     _OPTION_REG	set	129
   258  008F                     _OSCCONbits	set	143
   259  0086                     _TRISB	set	134
   260  0089                     _TRISE	set	137
   261  0088                     _TRISD	set	136
   262  0087                     _TRISC	set	135
   263  0085                     _TRISA	set	133
   264  0189                     _ANSELH	set	393
   265  0188                     _ANSEL	set	392
   266                           
   267                           	psect	cinit
   268  0011                     start_initialization:	
   269                           ; #config settings
   270                           
   271  0011                     __initialization:
   272                           
   273                           ; Initialize objects allocated to BANK0
   274  0011  1383               	bcf	3,7	;select IRP bank0
   275  0012  3036               	movlw	low (__pdataBANK0+22)
   276  0013  00FD               	movwf	btemp+-1
   277  0014  3002               	movlw	high __pidataBANK0
   278  0015  00FE               	movwf	btemp
   279  0016  30B3               	movlw	low __pidataBANK0
   280  0017  00FF               	movwf	btemp+1
   281  0018  3020               	movlw	low __pdataBANK0
   282  0019  0084               	movwf	4
   283  001A  120A  118A  22CD  120A  118A  	fcall	init_ram0
   284                           
   285                           ; Clear objects allocated to BANK0
   286  001F  01C6               	clrf	__pbssBANK0& (0+127)
   287  0020  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   288  0021  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   289  0022  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   290  0023  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   291  0024  01CB               	clrf	(__pbssBANK0+5)& (0+127)
   292                           
   293                           ; Clear objects allocated to COMMON
   294  0025  01FC               	clrf	__pbssCOMMON& (0+127)
   295  0026  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   296  0027                     end_of_initialization:	
   297                           ;End of C runtime variable initialization code
   298                           
   299  0027                     __end_of__initialization:
   300  0027  0183               	clrf	3
   301  0028  120A  118A  2982   	ljmp	_main	;jump to C main() function
   302                           
   303                           	psect	bssCOMMON
   304  007C                     __pbssCOMMON:
   305  007C                     _centenas:
   306  007C                     	ds	2
   307                           
   308                           	psect	bssBANK0
   309  0046                     __pbssBANK0:
   310  0046                     _VALOR:
   311  0046                     	ds	2
   312  0048                     _unidades:
   313  0048                     	ds	2
   314  004A                     _decenas:
   315  004A                     	ds	2
   316                           
   317                           	psect	dataBANK0
   318  0020                     __pdataBANK0:
   319  0020                     _digitos:
   320  0020                     	ds	20
   321  0034                     _select:
   322  0034                     	ds	2
   323                           
   324                           	psect	inittext
   325  02C9                     init_fetch0:	
   326                           ;	Called with low address in FSR and high address in W
   327                           
   328  02C9  087E               	movf	btemp,w
   329  02CA  008A               	movwf	10
   330  02CB  087F               	movf	btemp+1,w
   331  02CC  0082               	movwf	2
   332  02CD                     init_ram0:	
   333                           ;Called with:
   334                           ;	high address of idata address in btemp 
   335                           ;	low address of idata address in btemp+1 
   336                           ;	low address of data in FSR
   337                           ;	high address + 1 of data in btemp-1
   338                           
   339  02CD  120A  118A  22C9  120A  118A  	fcall	init_fetch0
   340  02D2  0080               	movwf	0
   341  02D3  0A84               	incf	4,f
   342  02D4  0804               	movf	4,w
   343  02D5  067D               	xorwf	btemp+-1,w
   344  02D6  1903               	btfsc	3,2
   345  02D7  3400               	retlw	0
   346  02D8  0AFF               	incf	btemp+1,f
   347  02D9  1903               	btfsc	3,2
   348  02DA  0AFE               	incf	btemp,f
   349  02DB  2ACD               	goto	init_ram0
   350                           
   351                           	psect	cstackCOMMON
   352  0070                     __pcstackCOMMON:
   353  0070                     ?_display:
   354  0070                     ?_setup:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_isr:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_main:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     display@c:	
   364                           ; 1 bytes @ 0x0
   365                           
   366                           
   367                           ; 2 bytes @ 0x0
   368  0070                     	ds	2
   369  0072                     display@d:
   370                           
   371                           ; 2 bytes @ 0x2
   372  0072                     	ds	2
   373  0074                     display@u:
   374                           
   375                           ; 2 bytes @ 0x4
   376  0074                     	ds	2
   377  0076                     ??_display:
   378                           
   379                           ; 1 bytes @ 0x6
   380  0076                     	ds	1
   381  0077                     ??_isr:
   382                           
   383                           ; 1 bytes @ 0x7
   384  0077                     	ds	5
   385                           
   386                           	psect	cstackBANK0
   387  0036                     __pcstackBANK0:
   388  0036                     ??_setup:
   389  0036                     ?___awdiv:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0036                     ?___awmod:	
   393                           ; 2 bytes @ 0x0
   394                           
   395  0036                     ___awdiv@divisor:	
   396                           ; 2 bytes @ 0x0
   397                           
   398  0036                     ___awmod@divisor:	
   399                           ; 2 bytes @ 0x0
   400                           
   401                           
   402                           ; 2 bytes @ 0x0
   403  0036                     	ds	2
   404  0038                     ___awdiv@dividend:
   405  0038                     ___awmod@dividend:	
   406                           ; 2 bytes @ 0x2
   407                           
   408                           
   409                           ; 2 bytes @ 0x2
   410  0038                     	ds	2
   411  003A                     ??___awdiv:
   412  003A                     ??___awmod:	
   413                           ; 1 bytes @ 0x4
   414                           
   415                           
   416                           ; 1 bytes @ 0x4
   417  003A                     	ds	1
   418  003B                     ___awdiv@counter:
   419  003B                     ___awmod@counter:	
   420                           ; 1 bytes @ 0x5
   421                           
   422                           
   423                           ; 1 bytes @ 0x5
   424  003B                     	ds	1
   425  003C                     ___awdiv@sign:
   426  003C                     ___awmod@sign:	
   427                           ; 1 bytes @ 0x6
   428                           
   429                           
   430                           ; 1 bytes @ 0x6
   431  003C                     	ds	1
   432  003D                     ___awdiv@quotient:
   433                           
   434                           ; 2 bytes @ 0x7
   435  003D                     	ds	2
   436  003F                     ?_centena:
   437  003F                     ?_decena:	
   438                           ; 1 bytes @ 0x9
   439                           
   440  003F                     centena@numero:	
   441                           ; 1 bytes @ 0x9
   442                           
   443  003F                     decena@numero:	
   444                           ; 2 bytes @ 0x9
   445                           
   446                           
   447                           ; 2 bytes @ 0x9
   448  003F                     	ds	2
   449  0041                     centena@c:
   450  0041                     decena@d:	
   451                           ; 1 bytes @ 0xB
   452                           
   453                           
   454                           ; 1 bytes @ 0xB
   455  0041                     	ds	1
   456  0042                     ??_centena:
   457  0042                     decena@u:	
   458                           ; 1 bytes @ 0xC
   459                           
   460                           
   461                           ; 1 bytes @ 0xC
   462  0042                     	ds	1
   463  0043                     ??_decena:
   464  0043                     ??_main:	
   465                           ; 1 bytes @ 0xD
   466                           
   467                           
   468                           ; 1 bytes @ 0xD
   469  0043                     	ds	3
   470                           
   471                           	psect	maintext
   472  0182                     __pmaintext:	
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 69 in file "main.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : B00/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0
   494 ;;      Temps:          0       3       0       0       0
   495 ;;      Totals:         0       3       0       0       0
   496 ;;Total ram usage:        3 bytes
   497 ;; Hardware stack levels required when called:    4
   498 ;; This function calls:
   499 ;;		_centena
   500 ;;		_decena
   501 ;;		_setup
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _main
   509  0182                     _main:
   510  0182                     l1162:	
   511                           ;incstack = 0
   512                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   513                           
   514                           
   515                           ;main.c: 70:     PORTA = 0X00;
   516  0182  120A  118A  21D8  120A  118A  	fcall	_setup
   517  0187                     l1164:
   518                           
   519                           ;main.c: 71:     PORTB = 0X00;
   520  0187  1283               	bcf	3,5	;RP0=0, select bank0
   521  0188  1303               	bcf	3,6	;RP1=0, select bank0
   522  0189  149F               	bsf	31,1	;volatile
   523  018A  2995               	goto	l1172
   524  018B                     l1166:
   525                           
   526                           ;main.c: 75: 
   527  018B  081F               	movf	31,w	;volatile
   528  018C  39C3               	andlw	-61
   529  018D  3830               	iorlw	48
   530  018E  009F               	movwf	31	;volatile
   531                           
   532                           ;main.c: 76: 
   533  018F  29AA               	goto	l1174
   534  0190                     l1168:
   535                           
   536                           ;main.c: 78:     OSCCONbits.IRCF1 = 1;
   537  0190  081F               	movf	31,w	;volatile
   538  0191  39C3               	andlw	-61
   539  0192  380C               	iorlw	12
   540  0193  009F               	movwf	31	;volatile
   541                           
   542                           ;main.c: 79:     OSCCONbits.IRCF0 = 0;
   543  0194  29AA               	goto	l1174
   544  0195                     l1172:
   545  0195  1283               	bcf	3,5	;RP0=0, select bank0
   546  0196  1303               	bcf	3,6	;RP1=0, select bank0
   547  0197  0C1F               	rrf	31,w	;volatile
   548  0198  00C3               	movwf	??_main
   549  0199  0C43               	rrf	??_main,w
   550  019A  390F               	andlw	15
   551  019B  00C4               	movwf	??_main+1
   552  019C  01C5               	clrf	??_main+2
   553                           
   554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   555                           ; Switch size 1, requested type "simple"
   556                           ; Number of cases is 1, Range of values is 0 to 0
   557                           ; switch strategies available:
   558                           ; Name         Instructions Cycles
   559                           ; simple_byte            4     3 (average)
   560                           ; direct_byte           11     8 (fixed)
   561                           ; jumptable            260     6 (fixed)
   562                           ;	Chosen strategy is simple_byte
   563  019D  0845               	movf	??_main+2,w
   564  019E  3A00               	xorlw	0	; case 0
   565  019F  1903               	skipnz
   566  01A0  29A2               	goto	l1226
   567  01A1  29AA               	goto	l1174
   568  01A2                     l1226:
   569                           
   570                           ; Switch size 1, requested type "simple"
   571                           ; Number of cases is 2, Range of values is 3 to 12
   572                           ; switch strategies available:
   573                           ; Name         Instructions Cycles
   574                           ; simple_byte            7     4 (average)
   575                           ; direct_byte           41    11 (fixed)
   576                           ; jumptable            263     9 (fixed)
   577                           ;	Chosen strategy is simple_byte
   578  01A2  0844               	movf	??_main+1,w
   579  01A3  3A03               	xorlw	3	; case 3
   580  01A4  1903               	skipnz
   581  01A5  298B               	goto	l1166
   582  01A6  3A0F               	xorlw	15	; case 12
   583  01A7  1903               	skipnz
   584  01A8  2990               	goto	l1168
   585  01A9  29AA               	goto	l1174
   586  01AA                     l1174:
   587                           
   588                           ;main.c: 81: 
   589  01AA  300F               	movlw	15
   590  01AB  1283               	bcf	3,5	;RP0=0, select bank0
   591  01AC  1303               	bcf	3,6	;RP1=0, select bank0
   592  01AD  00C3               	movwf	??_main
   593  01AE                     u497:
   594  01AE  0BC3               	decfsz	??_main,f
   595  01AF  29AE               	goto	u497
   596  01B0  29B1               	nop2
   597  01B1                     l1176:
   598                           
   599                           ;main.c: 82: 
   600  01B1  1283               	bcf	3,5	;RP0=0, select bank0
   601  01B2  1303               	bcf	3,6	;RP1=0, select bank0
   602  01B3  149F               	bsf	31,1	;volatile
   603  01B4                     l1178:
   604                           
   605                           ;main.c: 83:     OPTION_REG = 0B11010100;
   606  01B4  0847               	movf	_VALOR+1,w
   607  01B5  00C0               	movwf	centena@numero+1
   608  01B6  0846               	movf	_VALOR,w
   609  01B7  00BF               	movwf	centena@numero
   610  01B8  307C               	movlw	(low (_centenas| 0))& (0+255)
   611  01B9  00C3               	movwf	??_main
   612  01BA  0843               	movf	??_main,w
   613  01BB  00C1               	movwf	centena@c
   614  01BC  120A  118A  229A  120A  118A  	fcall	_centena
   615  01C1                     l1180:
   616                           
   617                           ;main.c: 84:     TMR0 = 100;
   618  01C1  1283               	bcf	3,5	;RP0=0, select bank0
   619  01C2  1303               	bcf	3,6	;RP1=0, select bank0
   620  01C3  0847               	movf	_VALOR+1,w
   621  01C4  00C0               	movwf	decena@numero+1
   622  01C5  0846               	movf	_VALOR,w
   623  01C6  00BF               	movwf	decena@numero
   624  01C7  304A               	movlw	(low (_decenas| 0))& (0+255)
   625  01C8  00C3               	movwf	??_main
   626  01C9  0843               	movf	??_main,w
   627  01CA  00C1               	movwf	decena@d
   628  01CB  3048               	movlw	(low (_unidades| 0))& (0+255)
   629  01CC  00C4               	movwf	??_main+1
   630  01CD  0844               	movf	??_main+1,w
   631  01CE  00C2               	movwf	decena@u
   632  01CF  120A  118A  202B  120A  118A  	fcall	_decena
   633  01D4  2995               	goto	l1172
   634  01D5  120A  118A  280E   	ljmp	start
   635  01D8                     __end_of_main:
   636                           
   637                           	psect	text1
   638  01D8                     __ptext1:	
   639 ;; *************** function _setup *****************
   640 ;; Defined at:
   641 ;;		line 88 in file "main.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0
   657 ;;      Temps:          0       1       0       0       0
   658 ;;      Totals:         0       1       0       0       0
   659 ;;Total ram usage:        1 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    2
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _setup
   671  01D8                     _setup:
   672  01D8                     l1074:	
   673                           ;incstack = 0
   674                           ; Regs used in _setup: [wreg+status,2+status,0]
   675                           
   676                           
   677                           ;main.c: 90:     ADCON0bits.ADCS = 0X01;
   678  01D8  3008               	movlw	8
   679  01D9  1683               	bsf	3,5	;RP0=1, select bank3
   680  01DA  1703               	bsf	3,6	;RP1=1, select bank3
   681  01DB  0088               	movwf	8	;volatile
   682                           
   683                           ;main.c: 91:     ADCON1bits.ADFM = 0;
   684  01DC  3001               	movlw	1
   685  01DD  0089               	movwf	9	;volatile
   686                           
   687                           ;main.c: 93:     ADCON1bits.VCFG1 = 0;
   688  01DE  3008               	movlw	8
   689  01DF  1683               	bsf	3,5	;RP0=1, select bank1
   690  01E0  1303               	bcf	3,6	;RP1=0, select bank1
   691  01E1  0085               	movwf	5	;volatile
   692  01E2                     l1076:
   693                           
   694                           ;main.c: 94: 
   695  01E2  0187               	clrf	7	;volatile
   696  01E3                     l1078:
   697                           
   698                           ;main.c: 95:     INTCONbits.GIE = 1;
   699  01E3  0188               	clrf	8	;volatile
   700  01E4                     l1080:
   701                           
   702                           ;main.c: 96:     INTCONbits.T0IE = 1;
   703  01E4  0189               	clrf	9	;volatile
   704  01E5                     l1082:
   705                           
   706                           ;main.c: 97:     INTCONbits.T0IF = 0;
   707  01E5  3001               	movlw	1
   708  01E6  0086               	movwf	6	;volatile
   709                           
   710                           ;main.c: 99:     PIE1bits.ADIE = 1;
   711  01E7  1283               	bcf	3,5	;RP0=0, select bank0
   712  01E8  1303               	bcf	3,6	;RP1=0, select bank0
   713  01E9  0185               	clrf	5	;volatile
   714                           
   715                           ;main.c: 100:     PIR1bits.ADIF = 0;
   716  01EA  0186               	clrf	6	;volatile
   717                           
   718                           ;main.c: 101: 
   719  01EB  0187               	clrf	7	;volatile
   720                           
   721                           ;main.c: 102: }
   722  01EC  0188               	clrf	8	;volatile
   723                           
   724                           ;main.c: 103: void centena(int numero, int *c){
   725  01ED  0189               	clrf	9	;volatile
   726  01EE                     l1084:
   727                           
   728                           ;main.c: 106: 
   729  01EE  1683               	bsf	3,5	;RP0=1, select bank1
   730  01EF  1303               	bcf	3,6	;RP1=0, select bank1
   731  01F0  170F               	bsf	15,6	;volatile
   732  01F1                     l1086:
   733                           
   734                           ;main.c: 107: void decena (int numero, int * d, int * u){
   735  01F1  168F               	bsf	15,5	;volatile
   736  01F2                     l1088:
   737                           
   738                           ;main.c: 108:     if(numero >= 100){
   739  01F2  120F               	bcf	15,4	;volatile
   740  01F3                     l1090:
   741                           
   742                           ;main.c: 109:         if(numero >= 200){
   743  01F3  140F               	bsf	15,0	;volatile
   744  01F4                     l1092:
   745                           
   746                           ;main.c: 112: 
   747  01F4  30D4               	movlw	212
   748  01F5  0081               	movwf	1	;volatile
   749  01F6                     l1094:
   750                           
   751                           ;main.c: 113:             *u = numero % 10;
   752  01F6  3064               	movlw	100
   753  01F7  1283               	bcf	3,5	;RP0=0, select bank0
   754  01F8  1303               	bcf	3,6	;RP1=0, select bank0
   755  01F9  0081               	movwf	1	;volatile
   756  01FA                     l1096:
   757                           
   758                           ;main.c: 116:         else {
   759  01FA  141F               	bsf	31,0	;volatile
   760  01FB                     l1098:
   761                           
   762                           ;main.c: 117:             numero = numero - 100;
   763  01FB  081F               	movf	31,w	;volatile
   764  01FC  39C3               	andlw	-61
   765  01FD  380C               	iorlw	12
   766  01FE  009F               	movwf	31	;volatile
   767  01FF                     l1100:
   768                           
   769                           ;main.c: 118:             *d = numero/10;
   770  01FF  3020               	movlw	32
   771  0200  1283               	bcf	3,5	;RP0=0, select bank0
   772  0201  1303               	bcf	3,6	;RP1=0, select bank0
   773  0202  00B6               	movwf	??_setup
   774  0203                     u507:
   775  0203  0BB6               	decfsz	??_setup,f
   776  0204  2A03               	goto	u507
   777  0205  0000               	nop
   778  0206                     l1102:
   779                           
   780                           ;main.c: 119: 
   781  0206  1283               	bcf	3,5	;RP0=0, select bank0
   782  0207  1303               	bcf	3,6	;RP1=0, select bank0
   783  0208  081F               	movf	31,w	;volatile
   784  0209  393F               	andlw	-193
   785  020A  3840               	iorlw	64
   786  020B  009F               	movwf	31	;volatile
   787  020C                     l1104:
   788                           
   789                           ;main.c: 120:             *u = numero % 10;
   790  020C  1683               	bsf	3,5	;RP0=1, select bank1
   791  020D  1303               	bcf	3,6	;RP1=0, select bank1
   792  020E  139F               	bcf	31,7	;volatile
   793  020F                     l1106:
   794                           
   795                           ;main.c: 121: 
   796  020F  121F               	bcf	31,4	;volatile
   797  0210                     l1108:
   798                           
   799                           ;main.c: 122:         }
   800  0210  129F               	bcf	31,5	;volatile
   801  0211                     l1110:
   802                           
   803                           ;main.c: 124:     else {
   804  0211  178B               	bsf	11,7	;volatile
   805  0212                     l1112:
   806                           
   807                           ;main.c: 125:         *d = numero / 10;
   808  0212  168B               	bsf	11,5	;volatile
   809  0213                     l1114:
   810                           
   811                           ;main.c: 126: 
   812  0213  110B               	bcf	11,2	;volatile
   813  0214                     l1116:
   814                           
   815                           ;main.c: 127:         *u = numero % 10;
   816  0214  170B               	bsf	11,6	;volatile
   817  0215                     l1118:
   818                           
   819                           ;main.c: 128: 
   820  0215  170C               	bsf	12,6	;volatile
   821  0216                     l1120:
   822                           
   823                           ;main.c: 129:     }
   824  0216  1283               	bcf	3,5	;RP0=0, select bank0
   825  0217  1303               	bcf	3,6	;RP1=0, select bank0
   826  0218  130C               	bcf	12,6	;volatile
   827  0219                     l92:
   828  0219  0008               	return
   829  021A                     __end_of_setup:
   830                           
   831                           	psect	text2
   832  002B                     __ptext2:	
   833 ;; *************** function _decena *****************
   834 ;; Defined at:
   835 ;;		line 136 in file "main.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  numero          2    9[BANK0 ] int 
   838 ;;  d               1   11[BANK0 ] PTR int 
   839 ;;		 -> decenas(2), 
   840 ;;  u               1   12[BANK0 ] PTR int 
   841 ;;		 -> unidades(2), 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       4       0       0       0
   854 ;;      Locals:         0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0
   856 ;;      Totals:         0       4       0       0       0
   857 ;;Total ram usage:        4 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    3
   860 ;; This function calls:
   861 ;;		___awdiv
   862 ;;		___awmod
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function _decena
   870  002B                     _decena:
   871  002B                     l1124:	
   872                           ;incstack = 0
   873                           ; Regs used in _decena: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   874                           
   875                           
   876                           ;main.c: 137:             select = 2;
   877  002B  1283               	bcf	3,5	;RP0=0, select bank0
   878  002C  1303               	bcf	3,6	;RP1=0, select bank0
   879  002D  0840               	movf	decena@numero+1,w
   880  002E  3A80               	xorlw	128
   881  002F  00FF               	movwf	btemp+1
   882  0030  3080               	movlw	128
   883  0031  027F               	subwf	btemp+1,w
   884  0032  1D03               	skipz
   885  0033  2836               	goto	u445
   886  0034  3064               	movlw	100
   887  0035  023F               	subwf	decena@numero,w
   888  0036                     u445:
   889  0036  1C03               	skipc
   890  0037  2839               	goto	u441
   891  0038  283A               	goto	u440
   892  0039                     u441:
   893  0039  288D               	goto	l1140
   894  003A                     u440:
   895  003A                     l1126:
   896                           
   897                           ;main.c: 138:             break;
   898  003A  1283               	bcf	3,5	;RP0=0, select bank0
   899  003B  1303               	bcf	3,6	;RP1=0, select bank0
   900  003C  0840               	movf	decena@numero+1,w
   901  003D  3A80               	xorlw	128
   902  003E  00FF               	movwf	btemp+1
   903  003F  3080               	movlw	128
   904  0040  027F               	subwf	btemp+1,w
   905  0041  1D03               	skipz
   906  0042  2845               	goto	u455
   907  0043  30C8               	movlw	200
   908  0044  023F               	subwf	decena@numero,w
   909  0045                     u455:
   910  0045  1C03               	skipc
   911  0046  2848               	goto	u451
   912  0047  2849               	goto	u450
   913  0048                     u451:
   914  0048  2882               	goto	l1134
   915  0049                     u450:
   916  0049                     l1128:
   917                           
   918                           ;main.c: 139:         case 2:
   919  0049  1283               	bcf	3,5	;RP0=0, select bank0
   920  004A  1303               	bcf	3,6	;RP1=0, select bank0
   921  004B  083F               	movf	decena@numero,w
   922  004C  3E38               	addlw	56
   923  004D  00BF               	movwf	decena@numero
   924  004E  0840               	movf	decena@numero+1,w
   925  004F  1803               	skipnc
   926  0050  3E01               	addlw	1
   927  0051  3EFF               	addlw	255
   928  0052  00C0               	movwf	decena@numero+1
   929  0053                     l1130:
   930                           
   931                           ;main.c: 140:             PORTD = digitos[d];
   932  0053  300A               	movlw	10
   933  0054  00B6               	movwf	___awdiv@divisor
   934  0055  3000               	movlw	0
   935  0056  00B7               	movwf	___awdiv@divisor+1
   936  0057  0840               	movf	decena@numero+1,w
   937  0058  00B9               	movwf	___awdiv@dividend+1
   938  0059  083F               	movf	decena@numero,w
   939  005A  00B8               	movwf	___awdiv@dividend
   940  005B  120A  118A  20BE  120A  118A  	fcall	___awdiv
   941  0060  1283               	bcf	3,5	;RP0=0, select bank0
   942  0061  1303               	bcf	3,6	;RP1=0, select bank0
   943  0062  0841               	movf	decena@d,w
   944  0063  0084               	movwf	4
   945  0064  0836               	movf	?___awdiv,w
   946  0065  1383               	bcf	3,7	;select IRP bank0
   947  0066  0080               	movwf	0
   948  0067  0A84               	incf	4,f
   949  0068  0837               	movf	?___awdiv+1,w
   950  0069  0080               	movwf	0
   951  006A                     l1132:
   952                           
   953                           ;main.c: 142:             select = 3;
   954  006A  300A               	movlw	10
   955  006B  00B6               	movwf	___awmod@divisor
   956  006C  3000               	movlw	0
   957  006D  00B7               	movwf	___awmod@divisor+1
   958  006E  0840               	movf	decena@numero+1,w
   959  006F  00B9               	movwf	___awmod@dividend+1
   960  0070  083F               	movf	decena@numero,w
   961  0071  00B8               	movwf	___awmod@dividend
   962  0072  120A  118A  2127  120A  118A  	fcall	___awmod
   963  0077  1283               	bcf	3,5	;RP0=0, select bank0
   964  0078  1303               	bcf	3,6	;RP1=0, select bank0
   965  0079  0842               	movf	decena@u,w
   966  007A  0084               	movwf	4
   967  007B  0836               	movf	?___awmod,w
   968  007C  1383               	bcf	3,7	;select IRP bank0
   969  007D  0080               	movwf	0
   970  007E  0A84               	incf	4,f
   971  007F  0837               	movf	?___awmod+1,w
   972  0080  0080               	movwf	0
   973                           
   974                           ;main.c: 144:         case 3:
   975  0081  28BD               	goto	l102
   976  0082                     l1134:
   977                           
   978                           ;main.c: 146:             PORTA = 0B00000100;
   979  0082  1283               	bcf	3,5	;RP0=0, select bank0
   980  0083  1303               	bcf	3,6	;RP1=0, select bank0
   981  0084  083F               	movf	decena@numero,w
   982  0085  3E9C               	addlw	156
   983  0086  00BF               	movwf	decena@numero
   984  0087  0840               	movf	decena@numero+1,w
   985  0088  1803               	skipnc
   986  0089  3E01               	addlw	1
   987  008A  3EFF               	addlw	255
   988  008B  00C0               	movwf	decena@numero+1
   989  008C  2853               	goto	l1130
   990  008D                     l1140:
   991  008D  300A               	movlw	10
   992  008E  1283               	bcf	3,5	;RP0=0, select bank0
   993  008F  1303               	bcf	3,6	;RP1=0, select bank0
   994  0090  00B6               	movwf	___awdiv@divisor
   995  0091  3000               	movlw	0
   996  0092  00B7               	movwf	___awdiv@divisor+1
   997  0093  0840               	movf	decena@numero+1,w
   998  0094  00B9               	movwf	___awdiv@dividend+1
   999  0095  083F               	movf	decena@numero,w
  1000  0096  00B8               	movwf	___awdiv@dividend
  1001  0097  120A  118A  20BE  120A  118A  	fcall	___awdiv
  1002  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1003  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1004  009E  0841               	movf	decena@d,w
  1005  009F  0084               	movwf	4
  1006  00A0  0836               	movf	?___awdiv,w
  1007  00A1  1383               	bcf	3,7	;select IRP bank0
  1008  00A2  0080               	movwf	0
  1009  00A3  0A84               	incf	4,f
  1010  00A4  0837               	movf	?___awdiv+1,w
  1011  00A5  0080               	movwf	0
  1012  00A6  300A               	movlw	10
  1013  00A7  00B6               	movwf	___awmod@divisor
  1014  00A8  3000               	movlw	0
  1015  00A9  00B7               	movwf	___awmod@divisor+1
  1016  00AA  0840               	movf	decena@numero+1,w
  1017  00AB  00B9               	movwf	___awmod@dividend+1
  1018  00AC  083F               	movf	decena@numero,w
  1019  00AD  00B8               	movwf	___awmod@dividend
  1020  00AE  120A  118A  2127  120A  118A  	fcall	___awmod
  1021  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1022  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1023  00B5  0842               	movf	decena@u,w
  1024  00B6  0084               	movwf	4
  1025  00B7  0836               	movf	?___awmod,w
  1026  00B8  1383               	bcf	3,7	;select IRP bank0
  1027  00B9  0080               	movwf	0
  1028  00BA  0A84               	incf	4,f
  1029  00BB  0837               	movf	?___awmod+1,w
  1030  00BC  0080               	movwf	0
  1031  00BD                     l102:
  1032  00BD  0008               	return
  1033  00BE                     __end_of_decena:
  1034                           
  1035                           	psect	text3
  1036  0127                     __ptext3:	
  1037 ;; *************** function ___awmod *****************
  1038 ;; Defined at:
  1039 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  divisor         2    0[BANK0 ] int 
  1042 ;;  dividend        2    2[BANK0 ] int 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  sign            1    6[BANK0 ] unsigned char 
  1045 ;;  counter         1    5[BANK0 ] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  2    0[BANK0 ] int 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       4       0       0       0
  1056 ;;      Locals:         0       2       0       0       0
  1057 ;;      Temps:          0       1       0       0       0
  1058 ;;      Totals:         0       7       0       0       0
  1059 ;;Total ram usage:        7 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    2
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_decena
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           
  1070                           ;psect for function ___awmod
  1071  0127                     ___awmod:
  1072  0127                     l1008:	
  1073                           ;incstack = 0
  1074                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1075                           
  1076  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0129  01BC               	clrf	___awmod@sign
  1079  012A                     l1010:
  1080  012A  1FB9               	btfss	___awmod@dividend+1,7
  1081  012B  292D               	goto	u351
  1082  012C  292E               	goto	u350
  1083  012D                     u351:
  1084  012D  2935               	goto	l1016
  1085  012E                     u350:
  1086  012E                     l1012:
  1087  012E  09B8               	comf	___awmod@dividend,f
  1088  012F  09B9               	comf	___awmod@dividend+1,f
  1089  0130  0AB8               	incf	___awmod@dividend,f
  1090  0131  1903               	skipnz
  1091  0132  0AB9               	incf	___awmod@dividend+1,f
  1092  0133                     l1014:
  1093  0133  01BC               	clrf	___awmod@sign
  1094  0134  0ABC               	incf	___awmod@sign,f
  1095  0135                     l1016:
  1096  0135  1FB7               	btfss	___awmod@divisor+1,7
  1097  0136  2938               	goto	u361
  1098  0137  2939               	goto	u360
  1099  0138                     u361:
  1100  0138  293E               	goto	l1020
  1101  0139                     u360:
  1102  0139                     l1018:
  1103  0139  09B6               	comf	___awmod@divisor,f
  1104  013A  09B7               	comf	___awmod@divisor+1,f
  1105  013B  0AB6               	incf	___awmod@divisor,f
  1106  013C  1903               	skipnz
  1107  013D  0AB7               	incf	___awmod@divisor+1,f
  1108  013E                     l1020:
  1109  013E  0836               	movf	___awmod@divisor,w
  1110  013F  0437               	iorwf	___awmod@divisor+1,w
  1111  0140  1903               	btfsc	3,2
  1112  0141  2943               	goto	u371
  1113  0142  2944               	goto	u370
  1114  0143                     u371:
  1115  0143  2973               	goto	l1038
  1116  0144                     u370:
  1117  0144                     l1022:
  1118  0144  01BB               	clrf	___awmod@counter
  1119  0145  0ABB               	incf	___awmod@counter,f
  1120  0146  2952               	goto	l1028
  1121  0147                     l1024:
  1122  0147  3001               	movlw	1
  1123  0148                     u385:
  1124  0148  1003               	clrc
  1125  0149  0DB6               	rlf	___awmod@divisor,f
  1126  014A  0DB7               	rlf	___awmod@divisor+1,f
  1127  014B  3EFF               	addlw	-1
  1128  014C  1D03               	skipz
  1129  014D  2948               	goto	u385
  1130  014E                     l1026:
  1131  014E  3001               	movlw	1
  1132  014F  00BA               	movwf	??___awmod
  1133  0150  083A               	movf	??___awmod,w
  1134  0151  07BB               	addwf	___awmod@counter,f
  1135  0152                     l1028:
  1136  0152  1FB7               	btfss	___awmod@divisor+1,7
  1137  0153  2955               	goto	u391
  1138  0154  2956               	goto	u390
  1139  0155                     u391:
  1140  0155  2947               	goto	l1024
  1141  0156                     u390:
  1142  0156                     l1030:
  1143  0156  0837               	movf	___awmod@divisor+1,w
  1144  0157  0239               	subwf	___awmod@dividend+1,w
  1145  0158  1D03               	skipz
  1146  0159  295C               	goto	u405
  1147  015A  0836               	movf	___awmod@divisor,w
  1148  015B  0238               	subwf	___awmod@dividend,w
  1149  015C                     u405:
  1150  015C  1C03               	skipc
  1151  015D  295F               	goto	u401
  1152  015E  2960               	goto	u400
  1153  015F                     u401:
  1154  015F  2966               	goto	l1034
  1155  0160                     u400:
  1156  0160                     l1032:
  1157  0160  0836               	movf	___awmod@divisor,w
  1158  0161  02B8               	subwf	___awmod@dividend,f
  1159  0162  0837               	movf	___awmod@divisor+1,w
  1160  0163  1C03               	skipc
  1161  0164  03B9               	decf	___awmod@dividend+1,f
  1162  0165  02B9               	subwf	___awmod@dividend+1,f
  1163  0166                     l1034:
  1164  0166  3001               	movlw	1
  1165  0167                     u415:
  1166  0167  1003               	clrc
  1167  0168  0CB7               	rrf	___awmod@divisor+1,f
  1168  0169  0CB6               	rrf	___awmod@divisor,f
  1169  016A  3EFF               	addlw	-1
  1170  016B  1D03               	skipz
  1171  016C  2967               	goto	u415
  1172  016D                     l1036:
  1173  016D  3001               	movlw	1
  1174  016E  02BB               	subwf	___awmod@counter,f
  1175  016F  1D03               	btfss	3,2
  1176  0170  2972               	goto	u421
  1177  0171  2973               	goto	u420
  1178  0172                     u421:
  1179  0172  2956               	goto	l1030
  1180  0173                     u420:
  1181  0173                     l1038:
  1182  0173  083C               	movf	___awmod@sign,w
  1183  0174  1903               	btfsc	3,2
  1184  0175  2977               	goto	u431
  1185  0176  2978               	goto	u430
  1186  0177                     u431:
  1187  0177  297D               	goto	l1042
  1188  0178                     u430:
  1189  0178                     l1040:
  1190  0178  09B8               	comf	___awmod@dividend,f
  1191  0179  09B9               	comf	___awmod@dividend+1,f
  1192  017A  0AB8               	incf	___awmod@dividend,f
  1193  017B  1903               	skipnz
  1194  017C  0AB9               	incf	___awmod@dividend+1,f
  1195  017D                     l1042:
  1196  017D  0839               	movf	___awmod@dividend+1,w
  1197  017E  00B7               	movwf	?___awmod+1
  1198  017F  0838               	movf	___awmod@dividend,w
  1199  0180  00B6               	movwf	?___awmod
  1200  0181                     l362:
  1201  0181  0008               	return
  1202  0182                     __end_of___awmod:
  1203                           
  1204                           	psect	text4
  1205  029A                     __ptext4:	
  1206 ;; *************** function _centena *****************
  1207 ;; Defined at:
  1208 ;;		line 132 in file "main.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  numero          2    9[BANK0 ] int 
  1211 ;;  c               1   11[BANK0 ] PTR int 
  1212 ;;		 -> centenas(2), 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       3       0       0       0
  1225 ;;      Locals:         0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0
  1227 ;;      Totals:         0       3       0       0       0
  1228 ;;Total ram usage:        3 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    3
  1231 ;; This function calls:
  1232 ;;		___awdiv
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _centena
  1240  029A                     _centena:
  1241  029A                     l1122:	
  1242                           ;incstack = 0
  1243                           ; Regs used in _centena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1244                           
  1245                           
  1246                           ;main.c: 133:     switch (select){
  1247  029A  3064               	movlw	100
  1248  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1249  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1250  029D  00B6               	movwf	___awdiv@divisor
  1251  029E  3000               	movlw	0
  1252  029F  00B7               	movwf	___awdiv@divisor+1
  1253  02A0  0840               	movf	centena@numero+1,w
  1254  02A1  00B9               	movwf	___awdiv@dividend+1
  1255  02A2  083F               	movf	centena@numero,w
  1256  02A3  00B8               	movwf	___awdiv@dividend
  1257  02A4  120A  118A  20BE  120A  118A  	fcall	___awdiv
  1258  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1259  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1260  02AB  0841               	movf	centena@c,w
  1261  02AC  0084               	movwf	4
  1262  02AD  0836               	movf	?___awdiv,w
  1263  02AE  0080               	movwf	0
  1264  02AF  0A84               	incf	4,f
  1265  02B0  0837               	movf	?___awdiv+1,w
  1266  02B1  0080               	movwf	0
  1267  02B2                     l95:
  1268  02B2  0008               	return
  1269  02B3                     __end_of_centena:
  1270                           
  1271                           	psect	text5
  1272  00BE                     __ptext5:	
  1273 ;; *************** function ___awdiv *****************
  1274 ;; Defined at:
  1275 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  divisor         2    0[BANK0 ] int 
  1278 ;;  dividend        2    2[BANK0 ] int 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  quotient        2    7[BANK0 ] int 
  1281 ;;  sign            1    6[BANK0 ] unsigned char 
  1282 ;;  counter         1    5[BANK0 ] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2    0[BANK0 ] int 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       4       0       0       0
  1293 ;;      Locals:         0       4       0       0       0
  1294 ;;      Temps:          0       1       0       0       0
  1295 ;;      Totals:         0       9       0       0       0
  1296 ;;Total ram usage:        9 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    2
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_centena
  1303 ;;		_decena
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function ___awdiv
  1309  00BE                     ___awdiv:
  1310  00BE                     l964:	
  1311                           ;incstack = 0
  1312                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1313                           
  1314  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1315  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1316  00C0  01BC               	clrf	___awdiv@sign
  1317  00C1                     l966:
  1318  00C1  1FB7               	btfss	___awdiv@divisor+1,7
  1319  00C2  28C4               	goto	u251
  1320  00C3  28C5               	goto	u250
  1321  00C4                     u251:
  1322  00C4  28CC               	goto	l972
  1323  00C5                     u250:
  1324  00C5                     l968:
  1325  00C5  09B6               	comf	___awdiv@divisor,f
  1326  00C6  09B7               	comf	___awdiv@divisor+1,f
  1327  00C7  0AB6               	incf	___awdiv@divisor,f
  1328  00C8  1903               	skipnz
  1329  00C9  0AB7               	incf	___awdiv@divisor+1,f
  1330  00CA                     l970:
  1331  00CA  01BC               	clrf	___awdiv@sign
  1332  00CB  0ABC               	incf	___awdiv@sign,f
  1333  00CC                     l972:
  1334  00CC  1FB9               	btfss	___awdiv@dividend+1,7
  1335  00CD  28CF               	goto	u261
  1336  00CE  28D0               	goto	u260
  1337  00CF                     u261:
  1338  00CF  28D9               	goto	l978
  1339  00D0                     u260:
  1340  00D0                     l974:
  1341  00D0  09B8               	comf	___awdiv@dividend,f
  1342  00D1  09B9               	comf	___awdiv@dividend+1,f
  1343  00D2  0AB8               	incf	___awdiv@dividend,f
  1344  00D3  1903               	skipnz
  1345  00D4  0AB9               	incf	___awdiv@dividend+1,f
  1346  00D5                     l976:
  1347  00D5  3001               	movlw	1
  1348  00D6  00BA               	movwf	??___awdiv
  1349  00D7  083A               	movf	??___awdiv,w
  1350  00D8  06BC               	xorwf	___awdiv@sign,f
  1351  00D9                     l978:
  1352  00D9  01BD               	clrf	___awdiv@quotient
  1353  00DA  01BE               	clrf	___awdiv@quotient+1
  1354  00DB                     l980:
  1355  00DB  0836               	movf	___awdiv@divisor,w
  1356  00DC  0437               	iorwf	___awdiv@divisor+1,w
  1357  00DD  1903               	btfsc	3,2
  1358  00DE  28E0               	goto	u271
  1359  00DF  28E1               	goto	u270
  1360  00E0                     u271:
  1361  00E0  2918               	goto	l1000
  1362  00E1                     u270:
  1363  00E1                     l982:
  1364  00E1  01BB               	clrf	___awdiv@counter
  1365  00E2  0ABB               	incf	___awdiv@counter,f
  1366  00E3  28EF               	goto	l988
  1367  00E4                     l984:
  1368  00E4  3001               	movlw	1
  1369  00E5                     u285:
  1370  00E5  1003               	clrc
  1371  00E6  0DB6               	rlf	___awdiv@divisor,f
  1372  00E7  0DB7               	rlf	___awdiv@divisor+1,f
  1373  00E8  3EFF               	addlw	-1
  1374  00E9  1D03               	skipz
  1375  00EA  28E5               	goto	u285
  1376  00EB                     l986:
  1377  00EB  3001               	movlw	1
  1378  00EC  00BA               	movwf	??___awdiv
  1379  00ED  083A               	movf	??___awdiv,w
  1380  00EE  07BB               	addwf	___awdiv@counter,f
  1381  00EF                     l988:
  1382  00EF  1FB7               	btfss	___awdiv@divisor+1,7
  1383  00F0  28F2               	goto	u291
  1384  00F1  28F3               	goto	u290
  1385  00F2                     u291:
  1386  00F2  28E4               	goto	l984
  1387  00F3                     u290:
  1388  00F3                     l990:
  1389  00F3  3001               	movlw	1
  1390  00F4                     u305:
  1391  00F4  1003               	clrc
  1392  00F5  0DBD               	rlf	___awdiv@quotient,f
  1393  00F6  0DBE               	rlf	___awdiv@quotient+1,f
  1394  00F7  3EFF               	addlw	-1
  1395  00F8  1D03               	skipz
  1396  00F9  28F4               	goto	u305
  1397  00FA  0837               	movf	___awdiv@divisor+1,w
  1398  00FB  0239               	subwf	___awdiv@dividend+1,w
  1399  00FC  1D03               	skipz
  1400  00FD  2900               	goto	u315
  1401  00FE  0836               	movf	___awdiv@divisor,w
  1402  00FF  0238               	subwf	___awdiv@dividend,w
  1403  0100                     u315:
  1404  0100  1C03               	skipc
  1405  0101  2903               	goto	u311
  1406  0102  2904               	goto	u310
  1407  0103                     u311:
  1408  0103  290B               	goto	l996
  1409  0104                     u310:
  1410  0104                     l992:
  1411  0104  0836               	movf	___awdiv@divisor,w
  1412  0105  02B8               	subwf	___awdiv@dividend,f
  1413  0106  0837               	movf	___awdiv@divisor+1,w
  1414  0107  1C03               	skipc
  1415  0108  03B9               	decf	___awdiv@dividend+1,f
  1416  0109  02B9               	subwf	___awdiv@dividend+1,f
  1417  010A                     l994:
  1418  010A  143D               	bsf	___awdiv@quotient,0
  1419  010B                     l996:
  1420  010B  3001               	movlw	1
  1421  010C                     u325:
  1422  010C  1003               	clrc
  1423  010D  0CB7               	rrf	___awdiv@divisor+1,f
  1424  010E  0CB6               	rrf	___awdiv@divisor,f
  1425  010F  3EFF               	addlw	-1
  1426  0110  1D03               	skipz
  1427  0111  290C               	goto	u325
  1428  0112                     l998:
  1429  0112  3001               	movlw	1
  1430  0113  02BB               	subwf	___awdiv@counter,f
  1431  0114  1D03               	btfss	3,2
  1432  0115  2917               	goto	u331
  1433  0116  2918               	goto	u330
  1434  0117                     u331:
  1435  0117  28F3               	goto	l990
  1436  0118                     u330:
  1437  0118                     l1000:
  1438  0118  083C               	movf	___awdiv@sign,w
  1439  0119  1903               	btfsc	3,2
  1440  011A  291C               	goto	u341
  1441  011B  291D               	goto	u340
  1442  011C                     u341:
  1443  011C  2922               	goto	l1004
  1444  011D                     u340:
  1445  011D                     l1002:
  1446  011D  09BD               	comf	___awdiv@quotient,f
  1447  011E  09BE               	comf	___awdiv@quotient+1,f
  1448  011F  0ABD               	incf	___awdiv@quotient,f
  1449  0120  1903               	skipnz
  1450  0121  0ABE               	incf	___awdiv@quotient+1,f
  1451  0122                     l1004:
  1452  0122  083E               	movf	___awdiv@quotient+1,w
  1453  0123  00B7               	movwf	?___awdiv+1
  1454  0124  083D               	movf	___awdiv@quotient,w
  1455  0125  00B6               	movwf	?___awdiv
  1456  0126                     l349:
  1457  0126  0008               	return
  1458  0127                     __end_of___awdiv:
  1459                           
  1460                           	psect	text6
  1461  025B                     __ptext6:	
  1462 ;; *************** function _isr *****************
  1463 ;; Defined at:
  1464 ;;		line 49 in file "main.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      void 
  1471 ;; Registers used:
  1472 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1478 ;;      Params:         0       0       0       0       0
  1479 ;;      Locals:         0       0       0       0       0
  1480 ;;      Temps:          5       0       0       0       0
  1481 ;;      Totals:         5       0       0       0       0
  1482 ;;Total ram usage:        5 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    1
  1485 ;; This function calls:
  1486 ;;		_display
  1487 ;; This function is called by:
  1488 ;;		Interrupt level 1
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           
  1493                           ;psect for function _isr
  1494  025B                     _isr:
  1495  025B                     i1l1142:
  1496                           
  1497                           ;main.c: 50:               break;
  1498  025B  138B               	bcf	11,7	;volatile
  1499                           
  1500                           ;main.c: 51:         }
  1501  025C  1D0B               	btfss	11,2	;volatile
  1502  025D  2A5F               	goto	u46_21
  1503  025E  2A60               	goto	u46_20
  1504  025F                     u46_21:
  1505  025F  2A76               	goto	i1l1150
  1506  0260                     u46_20:
  1507  0260                     i1l1144:
  1508                           
  1509                           ;main.c: 52:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1510  0260  3064               	movlw	100
  1511  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0263  0081               	movwf	1	;volatile
  1514  0264                     i1l1146:
  1515                           
  1516                           ;main.c: 53:         ADCON0bits.GO = 1;
  1517  0264  087D               	movf	_centenas+1,w
  1518  0265  00F1               	movwf	display@c+1
  1519  0266  087C               	movf	_centenas,w
  1520  0267  00F0               	movwf	display@c
  1521  0268  084B               	movf	_decenas+1,w
  1522  0269  00F3               	movwf	display@d+1
  1523  026A  084A               	movf	_decenas,w
  1524  026B  00F2               	movwf	display@d
  1525  026C  0849               	movf	_unidades+1,w
  1526  026D  00F5               	movwf	display@u+1
  1527  026E  0848               	movf	_unidades,w
  1528  026F  00F4               	movwf	display@u
  1529  0270  120A  118A  221A  120A  118A  	fcall	_display
  1530  0275                     i1l1148:
  1531                           
  1532                           ;main.c: 54:         centena(VALOR, &centenas);
  1533  0275  110B               	bcf	11,2	;volatile
  1534  0276                     i1l1150:
  1535                           
  1536                           ;main.c: 56:     }
  1537  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0278  1F0C               	btfss	12,6	;volatile
  1540  0279  2A7B               	goto	u47_21
  1541  027A  2A7C               	goto	u47_20
  1542  027B                     u47_21:
  1543  027B  2A90               	goto	i1l1160
  1544  027C                     u47_20:
  1545  027C                     i1l1152:
  1546                           
  1547                           ;main.c: 57: }
  1548  027C  0C1F               	rrf	31,w	;volatile
  1549  027D  00F7               	movwf	??_isr
  1550  027E  0C77               	rrf	??_isr,w
  1551  027F  390F               	andlw	15
  1552  0280  3A03               	xorlw	3
  1553  0281  1D03               	skipz
  1554  0282  2A84               	goto	u48_21
  1555  0283  2A85               	goto	u48_20
  1556  0284                     u48_21:
  1557  0284  2A88               	goto	i1l1156
  1558  0285                     u48_20:
  1559  0285                     i1l1154:
  1560                           
  1561                           ;main.c: 58: 
  1562  0285  081E               	movf	30,w	;volatile
  1563  0286  0087               	movwf	7	;volatile
  1564                           
  1565                           ;main.c: 60: 
  1566  0287  2A8F               	goto	i1l1158
  1567  0288                     i1l1156:
  1568                           
  1569                           ;main.c: 62:     ANSELH = 0X01;
  1570  0288  081E               	movf	30,w	;volatile
  1571  0289  00F7               	movwf	??_isr
  1572  028A  01F8               	clrf	??_isr+1
  1573  028B  0877               	movf	??_isr,w
  1574  028C  00C6               	movwf	_VALOR
  1575  028D  0878               	movf	??_isr+1,w
  1576  028E  00C7               	movwf	_VALOR+1
  1577  028F                     i1l1158:
  1578                           
  1579                           ;main.c: 64:     TRISA = 0B00001000;
  1580  028F  130C               	bcf	12,6	;volatile
  1581  0290                     i1l1160:
  1582                           
  1583                           ;main.c: 66:     TRISD = 0X00;
  1584  0290  178B               	bsf	11,7	;volatile
  1585  0291                     i1l77:
  1586  0291  087B               	movf	??_isr+4,w
  1587  0292  008A               	movwf	10
  1588  0293  087A               	movf	??_isr+3,w
  1589  0294  0084               	movwf	4
  1590  0295  0E79               	swapf	??_isr+2,w
  1591  0296  0083               	movwf	3
  1592  0297  0EFE               	swapf	btemp,f
  1593  0298  0E7E               	swapf	btemp,w
  1594  0299  0009               	retfie
  1595  029A                     __end_of_isr:
  1596                           
  1597                           	psect	intentry
  1598  0004                     __pintentry:	
  1599                           ;incstack = 0
  1600                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1601                           
  1602  0004                     interrupt_function:
  1603  007E                     saved_w	set	btemp
  1604  0004  00FE               	movwf	btemp
  1605  0005  0E03               	swapf	3,w
  1606  0006  00F9               	movwf	??_isr+2
  1607  0007  0804               	movf	4,w
  1608  0008  00FA               	movwf	??_isr+3
  1609  0009  080A               	movf	10,w
  1610  000A  00FB               	movwf	??_isr+4
  1611  000B  120A  118A  2A5B   	ljmp	_isr
  1612                           
  1613                           	psect	text7
  1614  021A                     __ptext7:	
  1615 ;; *************** function _display *****************
  1616 ;; Defined at:
  1617 ;;		line 160 in file "main.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  c               2    0[COMMON] int 
  1620 ;;  d               2    2[COMMON] int 
  1621 ;;  u               2    4[COMMON] int 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1633 ;;      Params:         6       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0
  1635 ;;      Temps:          1       0       0       0       0
  1636 ;;      Totals:         7       0       0       0       0
  1637 ;;Total ram usage:        7 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_isr
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           
  1647                           ;psect for function _display
  1648  021A                     _display:
  1649  021A                     i1l1046:	
  1650                           ;incstack = 0
  1651                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  1652                           
  1653  021A  2A48               	goto	i1l1068
  1654  021B                     i1l1048:
  1655  021B  0874               	movf	display@u,w
  1656  021C  00F6               	movwf	??_display
  1657  021D  0776               	addwf	??_display,w
  1658  021E  3E20               	addlw	(low (_digitos| 0))& (0+255)
  1659  021F  0084               	movwf	4
  1660  0220  1383               	bcf	3,7	;select IRP bank0
  1661  0221  0800               	movf	0,w
  1662  0222  0088               	movwf	8	;volatile
  1663  0223                     i1l1050:
  1664  0223  3001               	movlw	1
  1665  0224  0085               	movwf	5	;volatile
  1666  0225                     i1l1052:
  1667  0225  3002               	movlw	2
  1668  0226  00B4               	movwf	_select
  1669  0227  3000               	movlw	0
  1670  0228  00B5               	movwf	_select+1
  1671  0229  2A5A               	goto	i1l110
  1672  022A                     i1l1054:
  1673  022A  0872               	movf	display@d,w
  1674  022B  00F6               	movwf	??_display
  1675  022C  0776               	addwf	??_display,w
  1676  022D  3E20               	addlw	(low (_digitos| 0))& (0+255)
  1677  022E  0084               	movwf	4
  1678  022F  1383               	bcf	3,7	;select IRP bank0
  1679  0230  0800               	movf	0,w
  1680  0231  0088               	movwf	8	;volatile
  1681  0232                     i1l1056:
  1682  0232  3002               	movlw	2
  1683  0233  0085               	movwf	5	;volatile
  1684  0234                     i1l1058:
  1685  0234  3003               	movlw	3
  1686  0235  00B4               	movwf	_select
  1687  0236  3000               	movlw	0
  1688  0237  00B5               	movwf	_select+1
  1689  0238  2A5A               	goto	i1l110
  1690  0239                     i1l1060:
  1691  0239  0870               	movf	display@c,w
  1692  023A  00F6               	movwf	??_display
  1693  023B  0776               	addwf	??_display,w
  1694  023C  3E20               	addlw	(low (_digitos| 0))& (0+255)
  1695  023D  0084               	movwf	4
  1696  023E  1383               	bcf	3,7	;select IRP bank0
  1697  023F  0800               	movf	0,w
  1698  0240  0088               	movwf	8	;volatile
  1699  0241                     i1l1062:
  1700  0241  3004               	movlw	4
  1701  0242  0085               	movwf	5	;volatile
  1702  0243                     i1l1064:
  1703  0243  3001               	movlw	1
  1704  0244  00B4               	movwf	_select
  1705  0245  3000               	movlw	0
  1706  0246  00B5               	movwf	_select+1
  1707  0247  2A5A               	goto	i1l110
  1708  0248                     i1l1068:
  1709                           
  1710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1711                           ; Switch size 1, requested type "simple"
  1712                           ; Number of cases is 1, Range of values is 0 to 0
  1713                           ; switch strategies available:
  1714                           ; Name         Instructions Cycles
  1715                           ; simple_byte            4     3 (average)
  1716                           ; direct_byte           11     8 (fixed)
  1717                           ; jumptable            260     6 (fixed)
  1718                           ;	Chosen strategy is simple_byte
  1719  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1720  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1721  024A  0835               	movf	_select+1,w
  1722  024B  3A00               	xorlw	0	; case 0
  1723  024C  1903               	skipnz
  1724  024D  2A4F               	goto	i1l1228
  1725  024E  2A5A               	goto	i1l110
  1726  024F                     i1l1228:
  1727                           
  1728                           ; Switch size 1, requested type "simple"
  1729                           ; Number of cases is 3, Range of values is 1 to 3
  1730                           ; switch strategies available:
  1731                           ; Name         Instructions Cycles
  1732                           ; simple_byte           10     6 (average)
  1733                           ; direct_byte           20    11 (fixed)
  1734                           ; jumptable            263     9 (fixed)
  1735                           ;	Chosen strategy is simple_byte
  1736  024F  0834               	movf	_select,w
  1737  0250  3A01               	xorlw	1	; case 1
  1738  0251  1903               	skipnz
  1739  0252  2A1B               	goto	i1l1048
  1740  0253  3A03               	xorlw	3	; case 2
  1741  0254  1903               	skipnz
  1742  0255  2A2A               	goto	i1l1054
  1743  0256  3A01               	xorlw	1	; case 3
  1744  0257  1903               	skipnz
  1745  0258  2A39               	goto	i1l1060
  1746  0259  2A5A               	goto	i1l110
  1747  025A                     i1l110:
  1748  025A  0008               	return
  1749  025B                     __end_of_display:
  1750  007E                     btemp	set	126	;btemp
  1751  007E                     wtemp0	set	126
  1752                           
  1753                           	psect	config
  1754                           
  1755                           ;Config register CONFIG1 @ 0x2007
  1756                           ;	Oscillator Selection bits
  1757                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1758                           ;	Watchdog Timer Enable bit
  1759                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1760                           ;	Power-up Timer Enable bit
  1761                           ;	PWRTE = OFF, PWRT disabled
  1762                           ;	RE3/MCLR pin function select bit
  1763                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1764                           ;	Code Protection bit
  1765                           ;	CP = OFF, Program memory code protection is disabled
  1766                           ;	Data Code Protection bit
  1767                           ;	CPD = OFF, Data memory code protection is disabled
  1768                           ;	Brown Out Reset Selection bits
  1769                           ;	BOREN = OFF, BOR disabled
  1770                           ;	Internal External Switchover bit
  1771                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1772                           ;	Fail-Safe Clock Monitor Enabled bit
  1773                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1774                           ;	Low Voltage Programming Enable bit
  1775                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1776                           ;	In-Circuit Debugger Mode bit
  1777                           ;	DEBUG = 0x1, unprogrammed default
  1778  2007                     	org	8199
  1779  2007  20D5               	dw	8405
  1780                           
  1781                           ;Config register CONFIG2 @ 0x2008
  1782                           ;	Brown-out Reset Selection bit
  1783                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1784                           ;	Flash Program Memory Self Write Enable bits
  1785                           ;	WRT = OFF, Write protection off
  1786  2008                     	org	8200
  1787  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     16      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    decena@u	PTR int  size(1) Largest target is 2
		 -> unidades(BANK0[2]), 

    decena@d	PTR int  size(1) Largest target is 2
		 -> decenas(BANK0[2]), 

    centena@c	PTR int  size(1) Largest target is 2
		 -> centenas(COMMON[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_display

Critical Paths under _main in BANK0

    _main->_decena
    _decena->___awdiv
    _centena->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3346
                                             13 BANK0      3     3      0
                            _centena
                             _decena
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _decena                                               4     0      4    2242
                                              9 BANK0      4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _centena                                              3     0      3    1104
                                              9 BANK0      3     0      3
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     294
                                              7 COMMON     5     5      0
                            _display
 ---------------------------------------------------------------------------------
 (4) _display                                              7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _centena
     ___awdiv
   _decena
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)
   _display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3A      12        0.0%
ABS                  0      0      3A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Apr 21 23:12:41 2021

                      pc 0002                       l92 0219                       l95 02B2  
           ___awdiv@sign 003C                       fsr 0004                      l102 00BD  
                    l362 0181                      l349 0126                      l970 00CA  
                    l980 00DB                      l972 00CC                      l964 00BE  
                    l990 00F3                      l982 00E1                      l974 00D0  
                    l966 00C1                      l992 0104                      l984 00E4  
                    l976 00D5                      l968 00C5                      l994 010A  
                    l986 00EB                      l978 00D9                      l996 010B  
                    l988 00EF                      l998 0112                      u310 0104  
                    u311 0103                      u400 0160                      u305 00F4  
                    u401 015F                      u330 0118                      u250 00C5  
                    u331 0117                      u315 0100                      u251 00C4  
                    u340 011D                      u260 00D0                      u420 0173  
                    u341 011C                      u325 010C                      u261 00CF  
                    u421 0172                      u405 015C                      u270 00E1  
                    u430 0178                      u350 012E                      u271 00E0  
                    u431 0177                      u415 0167                      u351 012D  
                    u360 0139                      u440 003A                      u361 0138  
                    u441 0039                      u290 00F3                      u370 0144  
                    u450 0049                      u291 00F2                      u371 0143  
                    u451 0048                      u507 0203                      u285 00E5  
                    u445 0036                      u390 0156                      u391 0155  
                    u455 0045                      u385 0148                      u497 01AE  
                    _isr 025B                      fsr0 0004                      indf 0000  
           ___awmod@sign 003C                     l1000 0118                     l1002 011D  
                   l1010 012A                     l1004 0122                     l1020 013E  
                   l1012 012E                     l1100 01FF                     l1030 0156  
                   l1022 0144                     l1014 0133                     l1110 0211  
                   l1102 0206                     l1040 0178                     l1032 0160  
                   l1024 0147                     l1016 0135                     l1008 0127  
                   l1120 0216                     l1112 0212                     l1104 020C  
                   l1122 029A                     l1042 017D                     l1034 0166  
                   l1026 014E                     l1018 0139                     l1130 0053  
                   l1114 0213                     l1106 020F                     l1036 016D  
                   l1028 0152                     l1132 006A                     l1140 008D  
                   l1124 002B                     l1116 0214                     l1108 0210  
                   l1038 0173                     l1134 0082                     l1126 003A  
                   l1118 0215                     l1128 0049                     l1080 01E4  
                   l1090 01F3                     l1082 01E5                     l1074 01D8  
                   l1226 01A2                     l1162 0182                     l1092 01F4  
                   l1084 01EE                     l1076 01E2                     l1180 01C1  
                   l1172 0195                     l1164 0187                     l1094 01F6  
                   l1086 01F1                     l1078 01E3                     l1174 01AA  
                   l1166 018B                     l1096 01FA                     l1088 01F2  
                   l1176 01B1                     l1168 0190                     l1098 01FB  
                   l1178 01B4                     _ADIF 0066                     ?_isr 0070  
                   _T0IF 005A                     i1l77 0291                     _TMR0 0001  
                   _main 0182                     btemp 007E                     start 000E  
                  ??_isr 0077                    ?_main 0070          __end_of___awdiv 0127  
        __end_of___awmod 0182                    _ANSEL 0188          ___awdiv@divisor 0036  
                  i1l110 025A          ___awdiv@counter 003B                    _VALOR 0046  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u46_20 0260  
                  u46_21 025F                    u47_20 027C                    u47_21 027B  
                  u48_20 0285                    u48_21 0284                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089          __end_of_centena 02B3          __end_of_display 025B  
                  _setup 01D8                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 01D8  
                 ??_main 0043                   _ADRESH 001E         ___awdiv@dividend 0038  
                 ?_setup 0070                   _ANSELH 0189                   i1l1050 0223  
                 i1l1060 0239                   i1l1052 0225                   i1l1062 0241  
                 i1l1054 022A                   i1l1046 021A                   i1l1150 0276  
                 i1l1142 025B                   i1l1064 0243                   i1l1056 0232  
                 i1l1048 021B                   i1l1152 027C                   i1l1160 0290  
                 i1l1144 0260                   i1l1058 0234                   i1l1154 0285  
                 i1l1146 0264                   i1l1228 024F                   i1l1068 0248  
                 i1l1156 0288                   i1l1148 0275                   i1l1158 028F  
              ??___awdiv 003A                   _decena 002B                ??___awmod 003A  
       ___awdiv@quotient 003D          ___awmod@divisor 0036                   _select 0034  
              ??_centena 0042          ___awmod@counter 003B                ??_display 0076  
                 saved_w 007E  __end_of__initialization 0027           __pcstackCOMMON 0070  
           __pidataBANK0 02B3            __end_of_setup 021A                  ??_setup 0036  
             __pbssBANK0 0046               __pmaintext 0182                  ?_decena 003F  
             __pintentry 0004                  ___awdiv 00BE                  ___awmod 0127  
        __size_of_decena 0093                  _decenas 004A                  _centena 029A  
                _digitos 0020                  __ptext1 01D8                  __ptext2 002B  
                __ptext3 0127                  __ptext4 029A                  __ptext5 00BE  
                __ptext6 025B                  __ptext7 021A                  _display 021A  
                decena@d 0041                  decena@u 0042             __size_of_isr 003F  
       ___awmod@dividend 0038     end_of_initialization 0027           __end_of_decena 00BE  
    start_initialization 0011              __end_of_isr 029A             decena@numero 003F  
               ??_decena 0043               init_fetch0 02C9              __pdataBANK0 0020  
            __pbssCOMMON 007C                ___latbits 0002            __pcstackBANK0 0036  
          centena@numero 003F                 ?___awdiv 0036                 ?___awmod 0036  
               ?_centena 003F                 ?_display 0070           __size_of_setup 0042  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of___awdiv 0069  
       __size_of___awmod 005B         __size_of_centena 0019         __size_of_display 0041  
               _centenas 007C            __size_of_main 0056                 centena@c 0041  
               _unidades 0048                 display@c 0070                 display@d 0072  
               display@u 0074               _INTCONbits 000B                 init_ram0 02CD  
               intlevel1 0000               _OSCCONbits 008F               _OPTION_REG 0081  
